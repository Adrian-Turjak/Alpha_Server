2015-06-24T02:48:09.676097+00:00 app[web.1]: Wed, 24 Jun 2015 02:48:09 GMT body-parser deprecated undefined extended: provide extended option at core.js:19:20
2015-06-24T02:48:09.727939+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "UserQuestions" CASCADE;
2015-06-24T02:48:09.691819+00:00 app[web.1]: Listening on port 38953
2015-06-24T02:48:09.744683+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "UserTrophies" CASCADE;
2015-06-24T02:48:09.784017+00:00 heroku[web.1]: State changed from starting to up
2015-06-24T02:48:11.748895+00:00 heroku[web.1]: Process exited with status 143
2015-06-24T02:48:11.876578+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "SecurityQuestions" CASCADE;
2015-06-24T02:48:11.891954+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Trophies" CASCADE;
2015-06-24T02:48:11.907294+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Users" CASCADE;
2015-06-24T02:48:11.925796+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Users" ("id"   SERIAL , "username" VARCHAR(255) UNIQUE, "password" VARCHAR(255), "icon" VARCHAR(255), "score" INTEGER DEFAULT 0, "admin" BOOLEAN NOT NULL DEFAULT false, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
2015-06-24T02:48:11.869241+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "followers" CASCADE;
2015-06-24T02:48:11.883978+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Questions" CASCADE;
2015-06-24T02:48:11.919500+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Users" CASCADE;
2015-06-24T02:48:11.899793+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Tokens" CASCADE;
2015-06-24T02:48:14.928568+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-24T02:48:14.943017+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Tokens" ("id"   SERIAL , "token" VARCHAR(255) UNIQUE, "expires" TIMESTAMP WITH TIME ZONE, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "UserId" INTEGER REFERENCES "Users" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));
2015-06-24T02:48:14.992151+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Trophies" CASCADE;
2015-06-24T02:48:15.110296+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "SecurityQuestions" CASCADE;
2015-06-24T02:48:15.033503+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Trophies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-24T02:48:15.142807+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'SecurityQuestions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-24T02:48:15.149621+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "followers" ("createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "UserId" INTEGER  REFERENCES "Users" ("id") ON DELETE CASCADE ON UPDATE CASCADE, "FollowerId" INTEGER  REFERENCES "Users" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("UserId","FollowerId"));
2015-06-24T02:48:15.040546+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Questions" ("id"   SERIAL , "question" VARCHAR(255) UNIQUE, "trophy" VARCHAR(255), "choice1" VARCHAR(255), "choice2" VARCHAR(255), "choice3" VARCHAR(255), "choice4" VARCHAR(255), "answer" VARCHAR(255), "value" INTEGER DEFAULT 4, "deduct" INTEGER DEFAULT 1, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
2015-06-24T02:48:15.170771+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "UserTrophies" CASCADE;
2015-06-24T02:48:14.938973+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Tokens" CASCADE;
2015-06-24T02:48:14.983495+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Tokens' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-24T02:48:14.995901+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Trophies" ("id"   SERIAL , "country" VARCHAR(255), "name" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
2015-06-24T02:48:15.036670+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Questions" CASCADE;
2015-06-24T02:48:15.107085+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-24T02:48:15.115101+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "SecurityQuestions" ("id"   SERIAL , "username" VARCHAR(255), "questionOne" VARCHAR(255), "questionTwo" VARCHAR(255), "answerOne" VARCHAR(255), "answerTwo" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "UserId" INTEGER REFERENCES "Users" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));
2015-06-24T02:48:15.146239+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "followers" CASCADE;
2015-06-24T02:48:15.173437+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "UserTrophies" ("createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "UserId" INTEGER  REFERENCES "Users" ("id") ON DELETE CASCADE ON UPDATE CASCADE, "TrophyId" INTEGER  REFERENCES "Trophies" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("UserId","TrophyId"));
2015-06-24T02:48:15.167200+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'followers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-24T02:48:15.188180+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'UserTrophies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-24T02:48:15.191787+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "UserQuestions" CASCADE;
2015-06-24T02:48:15.211612+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'UserQuestions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-24T02:48:15.402320+00:00 app[web.1]: Executing (default): INSERT INTO "Users" ("id","username","password","icon","score","admin","updatedAt","createdAt") VALUES (DEFAULT,'demo','$2a$10$CRacNDlfC0u.HRyyfPIKcO1AvEzVsvjwDuYZJpQR9nlLQnm8zFs/6','nz.png',0,false,'2015-06-24 02:48:15.401 +00:00','2015-06-24 02:48:15.401 +00:00') RETURNING *;
2015-06-24T02:48:15.418674+00:00 app[web.1]: Executing (default): INSERT INTO "followers" ("UserId","FollowerId","updatedAt","createdAt") VALUES (1,2,'2015-06-24 02:48:15.417 +00:00','2015-06-24 02:48:15.417 +00:00') RETURNING *;
2015-06-24T02:48:15.413882+00:00 app[web.1]: Executing (default): SELECT "User"."id", "User"."username", "User"."password", "User"."icon", "User"."score", "User"."admin", "User"."createdAt", "User"."updatedAt", "followers"."createdAt" AS "followers.createdAt", "followers"."updatedAt" AS "followers.updatedAt", "followers"."UserId" AS "followers.UserId", "followers"."FollowerId" AS "followers.FollowerId" FROM "Users" AS "User" INNER JOIN "followers" AS "followers" ON "User"."id" = "followers"."FollowerId" AND "followers"."UserId" = 1 WHERE ("User"."id" = 2);
2015-06-24T02:48:15.308087+00:00 app[web.1]: Executing (default): INSERT INTO "Users" ("id","username","password","icon","score","admin","updatedAt","createdAt") VALUES (DEFAULT,'admin','$2a$10$mlA3oSyUhITs3crrkapXreKz00jR87fLPWdhWlhKMNnxw.3gHPIBe','nz.png',0,true,'2015-06-24 02:48:15.303 +00:00','2015-06-24 02:48:15.303 +00:00') RETURNING *;
2015-06-24T02:48:15.195072+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "UserQuestions" ("createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "UserId" INTEGER  REFERENCES "Users" ("id") ON DELETE CASCADE ON UPDATE CASCADE, "QuestionId" INTEGER  REFERENCES "Questions" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("UserId","QuestionId"));
2015-06-24T02:52:22.770952+00:00 app[web.1]: Executing (default): SELECT "id", "username", "password", "icon", "score", "admin", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."username" = 'testing' LIMIT 1;
2015-06-24T02:52:22.895450+00:00 app[web.1]: Executing (default): INSERT INTO "Users" ("id","username","password","score","admin","updatedAt","createdAt") VALUES (DEFAULT,'testing','$2a$10$b3q4wMiPARjDEHgSDnSCI.sAg4AIUxuPv5CxGX5gf6WAdKAasedM2',0,false,'2015-06-24 02:52:22.894 +00:00','2015-06-24 02:52:22.894 +00:00') RETURNING *;
2015-06-24T02:52:23.136744+00:00 app[web.1]: Executing (default): INSERT INTO "SecurityQuestions" ("id","username","questionOne","questionTwo","answerOne","answerTwo","updatedAt","createdAt") VALUES (DEFAULT,'testing','What''s my middle name?','What''s my last name?','$2a$10$.4Y4EAJz1Qhyfm771P6Qeubv8rsFQ3JtgRMPdGdAiUn1Z30ZBfZ8a','$2a$10$bGAJdgGd0eNRGnjlQTx4Qumh1StxPLA7QIZ1H77.4NQxpS1LjX0qO','2015-06-24 02:52:23.135 +00:00','2015-06-24 02:52:23.135 +00:00') RETURNING *;
2015-06-24T02:52:23.156727+00:00 heroku[router]: at=info method=POST path="/auth/register" host=powerful-cove-1691.herokuapp.com request_id=dbecae34-d323-41c7-8b97-bd7fceadaa66 fwd="130.195.44.91" dyno=web.1 connect=1ms service=443ms status=200 bytes=233
2015-06-24T02:59:42.643110+00:00 heroku[api]: Deploy 042fd1b by dannycole12@gmail.com
2015-06-24T02:59:42.643110+00:00 heroku[api]: Release v49 created by dannycole12@gmail.com
2015-06-24T02:59:42.732057+00:00 heroku[slug-compiler]: Slug compilation started
2015-06-24T02:59:42.732078+00:00 heroku[slug-compiler]: Slug compilation finished
2015-06-24T02:59:43.499635+00:00 heroku[web.1]: State changed from up to starting
2015-06-24T02:59:45.773150+00:00 heroku[web.1]: Starting process with command `node core.js`
2015-06-24T02:59:46.325259+00:00 heroku[web.1]: Stopping all processes with SIGTERM
2015-06-24T02:59:48.136462+00:00 heroku[web.1]: Process exited with status 143
2015-06-24T02:59:48.291445+00:00 app[web.1]: Detected 512 MB available memory, 512 MB limit per process (WEB_MEMORY)
2015-06-24T02:59:48.291516+00:00 app[web.1]: Recommending WEB_CONCURRENCY=1
2015-06-24T02:59:48.914651+00:00 app[web.1]: 
2015-06-24T02:59:48.914726+00:00 app[web.1]: /app/auth.js:113
2015-06-24T02:59:48.914986+00:00 app[web.1]:           questionTwo: questionTwo,
2015-06-24T02:59:48.915026+00:00 app[web.1]:           ^^^^^^^^^^^
2015-06-24T02:59:48.917103+00:00 app[web.1]: SyntaxError: Unexpected identifier
2015-06-24T02:59:48.917105+00:00 app[web.1]:     at Module._compile (module.js:439:25)
2015-06-24T02:59:48.917108+00:00 app[web.1]:     at Object.Module._extensions..js (module.js:474:10)
2015-06-24T02:59:48.917110+00:00 app[web.1]:     at Module.load (module.js:356:32)
2015-06-24T02:59:48.917111+00:00 app[web.1]:     at Function.Module._load (module.js:312:12)
2015-06-24T02:59:48.917113+00:00 app[web.1]:     at Module.require (module.js:364:17)
2015-06-24T02:59:48.917114+00:00 app[web.1]:     at require (module.js:380:17)
2015-06-24T02:59:48.917116+00:00 app[web.1]:     at Object.<anonymous> (/app/core.js:9:12)
2015-06-24T02:59:48.917117+00:00 app[web.1]:     at Module._compile (module.js:456:26)
2015-06-24T02:59:48.917119+00:00 app[web.1]:     at Object.Module._extensions..js (module.js:474:10)
2015-06-24T02:59:48.917120+00:00 app[web.1]:     at Module.load (module.js:356:32)
2015-06-24T02:59:48.917121+00:00 app[web.1]:     at Function.Module._load (module.js:312:12)
2015-06-24T02:59:48.917123+00:00 app[web.1]:     at Function.Module.runMain (module.js:497:10)
2015-06-24T02:59:48.917124+00:00 app[web.1]:     at startup (node.js:119:16)
2015-06-24T02:59:48.917126+00:00 app[web.1]:     at node.js:935:3
2015-06-24T02:59:49.647976+00:00 heroku[web.1]: State changed from crashed to starting
2015-06-24T02:59:49.646930+00:00 heroku[web.1]: State changed from starting to crashed
2015-06-24T02:59:49.633588+00:00 heroku[web.1]: Process exited with status 8
2015-06-24T02:59:51.728465+00:00 heroku[web.1]: Starting process with command `node core.js`
2015-06-24T02:59:53.146904+00:00 app[web.1]: Detected 512 MB available memo
ry, 512 MB limit per process (WEB_MEMORY)
2015-06-24T02:59:53.146930+00:00 app[web.1]: Recommending WEB_CONCURRENCY=1
2015-06-24T02:59:53.891497+00:00 app[web.1]: 
2015-06-24T02:59:53.891608+00:00 app[web.1]: /app/auth.js:113
2015-06-24T02:59:53.891961+00:00 app[web.1]:           questionTwo: questionTwo,
2015-06-24T02:59:53.892024+00:00 app[web.1]:           ^^^^^^^^^^^
2015-06-24T02:59:53.896271+00:00 app[web.1]: SyntaxError: Unexpected identifier
2015-06-24T02:59:53.896277+00:00 app[web.1]:     at Module._compile (module.js:439:25)
2015-06-24T02:59:53.896280+00:00 app[web.1]:     at Object.Module._extensions..js (module.js:474:10)
2015-06-24T02:59:53.896282+00:00 app[web.1]:     at Module.load (module.js:356:32)
2015-06-24T02:59:53.896284+00:00 app[web.1]:     at Function.Module._load (module.js:312:12)
2015-06-24T02:59:53.896285+00:00 app[web.1]:     at Module.require (module.js:364:17)
2015-06-24T02:59:53.896287+00:00 app[web.1]:     at require (module.js:380:17)
2015-06-24T02:59:53.896289+00:00 app[web.1]:     at Object.<anonymous> (/app/core.js:9:12)
2015-06-24T02:59:53.896291+00:00 app[web.1]:     at Module._compile (module.js:456:26)
2015-06-24T02:59:53.896292+00:00 app[web.1]:     at Object.Module._extensions..js (module.js:474:10)
2015-06-24T02:59:53.896294+00:00 app[web.1]:     at Module.load (module.js:356:32)
2015-06-24T02:59:53.896296+00:00 app[web.1]:     at Function.Module._load (module.js:312:12)
2015-06-24T02:59:53.896298+00:00 app[web.1]:     at Function.Module.runMain (module.js:497:10)
2015-06-24T02:59:53.896300+00:00 app[web.1]:     at startup (node.js:119:16)
2015-06-24T02:59:53.896301+00:00 app[web.1]:     at node.js:935:3
2015-06-24T02:59:54.772039+00:00 heroku[web.1]: State changed from starting to crashed
2015-06-24T02:59:54.766568+00:00 heroku[web.1]: Process exited with status 8
2015-06-24T03:00:51.056079+00:00 heroku[router]: at=error code=H10 desc="App crashed" method=POST path="/auth/register" host=powerful-cove-1691.herokuapp.com request_id=ac22c85c-1de7-4141-b0e0-343e524ccb64 fwd="130.195.44.91" dyno= connect= service= status=503 bytes=
2015-06-24T03:02:30.329046+00:00 heroku[web.1]: State changed from crashed to starting
2015-06-24T03:02:32.442534+00:00 heroku[web.1]: Starting process with command `node core.js`
2015-06-24T03:02:34.227521+00:00 app[web.1]: Detected 512 MB available memory, 512 MB limit per process (WEB_MEMORY)
2015-06-24T03:02:34.227589+00:00 app[web.1]: Recommending WEB_CONCURRENCY=1
2015-06-24T03:02:34.875272+00:00 app[web.1]: 
2015-06-24T03:02:34.875632+00:00 app[web.1]:           questionTwo: questionTwo,
2015-06-24T03:02:34.875699+00:00 app[web.1]:           ^^^^^^^^^^^
2015-06-24T03:02:34.878628+00:00 app[web.1]: SyntaxError: Unexpected identifier
2015-06-24T03:02:34.878631+00:00 app[web.1]:     at Module._compile (module.js:439:25)
2015-06-24T03:02:34.878632+00:00 app[web.1]:     at Object.Module._extensions..js (module.js:474:10)
2015-06-24T03:02:34.878634+00:00 app[web.1]:     at Module.load (module.js:356:32)
2015-06-24T03:02:34.878636+00:00 app[web.1]:     at Function.Module._load (module.js:312:12)
2015-06-24T03:02:34.878637+00:00 app[web.1]:     at Module.require (module.js:364:17)
2015-06-24T03:02:34.878639+00:00 app[web.1]:     at require (module.js:380:17)
2015-06-24T03:02:34.878640+00:00 app[web.1]:     at Object.<anonymous> (/app/core.js:9:12)
2015-06-24T03:02:34.878642+00:00 app[web.1]:     at Module._compile (module.js:456:26)
2015-06-24T03:02:34.878643+00:00 app[web.1]:     at Object.Module._extensions..js (module.js:474:10)
2015-06-24T03:02:34.878645+00:00 app[web.1]:     at Module.load (module.js:356:32)
2015-06-24T03:02:34.878646+00:00 app[web.1]:     at Function.Module._load (module.js:312:12)
2015-06-24T03:02:34.878647+00:00 app[web.1]:     at Function.Module.runMain (module.js:497:10)
2015-06-24T03:02:34.878649+00:00 app[web.1]:     at startup (node.js:119:16)
2015-06-24T03:02:34.878650+00:00 app[web.1]:     at node.js:935:3
2015-06-24T03:02:34.875359+00:00 app[web.1]: /app/auth.js:113
2015-06-24T03:02:35.737094+00:00 heroku[web.1]: State changed from starting to crashed
2015-06-24T03:02:35.722461+00:00 heroku[web.1]: Process exited with status 8
2015-06-24T03:02:42.632790+00:00 heroku[router]: at=error code=H10 desc="App crashed" method=POST path="/auth/register" host=powerful-cove-1691.herokuapp.com request_id=f3e98674-9328-4408-8987-ce6fedf59214 fwd="130.195.44.91" dyno= connect= service= status=503 bytes=
2015-06-24T03:04:18.351442+00:00 heroku[web.1]: State changed from crashed to starting
2015-06-24T03:04:20.816546+00:00 heroku[web.1]: Starting process with command `node core.js`
2015-06-24T03:04:22.923460+00:00 app[web.1]: Detected 512 MB available memory, 512 MB limit per process (WEB_MEMORY)
2015-06-24T03:04:22.923528+00:00 app[web.1]: Recommending WEB_CONCURRENCY=1
2015-06-24T03:04:24.202083+00:00 app[web.1]: /app/auth.js:113
2015-06-24T03:04:24.201093+00:00 app[web.1]: 
2015-06-24T03:04:24.202600+00:00 app[web.1]:           questionTwo: questionTwo,
2015-06-24T03:04:24.202958+00:00 app[web.1]:           ^^^^^^^^^^^
2015-06-24T03:04:24.206486+00:00 app[web.1]: SyntaxError: Unexpected identifier
2015-06-24T03:04:24.206490+00:00 app[web.1]:     at Module._compile (module.js:439:25)
2015-06-24T03:04:24.206492+00:00 app[web.1]:     at Object.Module._extensions..js (module.js:474:10)
2015-06-24T03:04:24.206493+00:00 app[web.1]:     at Module.load (module.js:356:32)
2015-06-24T03:04:24.206494+00:00 app[web.1]:     at Function.Module._load (module.js:312:12)
2015-06-24T03:04:24.206495+00:00 app[web.1]:     at Module.require (module.js:364:17)
2015-06-24T03:04:24.206496+00:00 app[web.1]:     at require (module.js:380:17)
2015-06-24T03:04:24.206497+00:00 app[web.1]:     at Object.<anonymous> (/app/core.js:9:12)
2015-06-24T03:04:24.206498+00:00 app[web.1]:     at Module._compile (module.js:456:26)
2015-06-24T03:04:24.206500+00:00 app[web.1]:     at Object.Module._extensions..js (module.js:474:10)
2015-06-24T03:04:24.206501+00:00 app[web.1]:     at Module.load (module.js:356:32)
2015-06-24T03:04:24.206502+00:00 app[web.1]:     at Function.Module._load (module.js:312:12)
2015-06-24T03:04:24.206503+00:00 app[web.1]:     at Function.Module.runMain (module.js:497:10)
2015-06-24T03:04:24.206504+00:00 app[web.1]:     at startup (node.js:119:16)
2015-06-24T03:04:24.206505+00:00 app[web.1]:     at node.js:935:3
2015-06-24T03:04:25.197833+00:00 heroku[web.1]: State changed from starting to crashed
2015-06-24T03:04:25.161954+00:00 heroku[web.1]: Process exited with status 8
2015-06-24T03:04:25.871092+00:00 heroku[router]: at=error code=H10 desc="App crashed" method=POST path="/auth/register" host=powerful-cove-1691.herokuapp.com request_id=0024fcde-2c0d-4331-8717-20c11d9fdf7c fwd="130.195.44.91" dyno= connect= service= status=503 bytes=
2015-06-24T03:05:01.966971+00:00 heroku[router]: at=error code=H10 desc="App crashed" method=GET path="/" host=powerful-cove-1691.herokuapp.com request_id=e41228ff-5abb-418e-8241-e7d906159cfc fwd="130.195.44.91" dyno= connect= service= status=503 bytes=
2015-06-24T03:05:06.747413+00:00 heroku[web.1]: State changed from crashed to starting
2015-06-24T03:05:08.692071+00:00 heroku[web.1]: Starting process with command `node core.js`
2015-06-24T03:05:10.581222+00:00 app[web.1]: Detected 512 MB available memory, 512 MB limit per process (WEB_MEMORY)
2015-06-24T03:05:10.581250+00:00 app[web.1]: Recommending WEB_CONCURRENCY=1
2015-06-24T03:05:11.575091+00:00 app[web.1]: 
2015-06-24T03:05:11.575193+00:00 app[web.1]: /app/auth.js:113
2015-06-24T03:05:11.575501+00:00 app[web.1]:           questionTwo: questionTwo,
2015-06-24T03:05:11.575541+00:00 app[web.1]:           ^^^^^^^^^^^
2015-06-24T03:05:11.577984+00:00 app[web.1]: SyntaxError: Unexpected identifier
2015-06-24T03:05:11.577987+00:00 app[web.1]:     at Module._compile (module.js:439:25)
2015-06-24T03:05:11.577989+00:00 app[web.1]:     at Object.Module._extensions..js (module.js:474:10)
2015-06-24T03:05:11.577990+00:00 app[web.1]:     at Module.load (module.js:356:32)
2015-06-24T03:05:11.577991+00:00 app[web.1]:     at Function.Module._load (module.js:312:12)
2015-06-24T03:05:11.577993+00:00 app[web.1]:     at Module.require (module.js:364:17)
2015-06-24T03:05:11.577994+00:00 app[web.1]:     at require (module.js:380:17)
2015-06-24T03:05:11.577995+00:00 app[web.1]:     at Object.<anonymous> (/app/core.js:9:12)
2015-06-24T03:05:11.577997+00:00 app[web.1]:     at Module._compile (module.js:456:26)
2015-06-24T03:05:11.577998+00:00 app[web.1]:     at Object.Module._extensions..js (module.js:474:10)
2015-06-24T03:05:11.577999+00:00 app[web.1]:     at Module.load (module.js:356:32)
2015-06-24T03:05:11.578001+00:00 app[web.1]:     at Function.Module._load (module.js:312:12)
2015-06-24T03:05:11.578002+00:00 app[web.1]:     at Function.Module.runMain (module.js:497:10)
2015-06-24T03:05:11.578004+00:00 app[web.1]:     at startup (node.js:119:16)
2015-06-24T03:05:11.578005+00:00 app[web.1]:     at node.js:935:3
2015-06-24T03:05:12.625748+00:00 heroku[web.1]: Process exited with status 8
2015-06-24T03:05:12.644975+00:00 heroku[web.1]: State changed from starting to crashed
2015-06-24T03:05:13.623300+00:00 heroku[router]: at=error code=H10 desc="App crashed" method=GET path="/" host=powerful-cove-1691.herokuapp.com request_id=2180ae2f-12b9-4aa6-8f8b-f7deebe0ea17 fwd="130.195.44.91" dyno= connect= service= status=503 bytes=
2015-06-24T03:05:15.991447+00:00 heroku[router]: at=error code=H10 desc="App crashed" method=GET path="/" host=powerful-cove-1691.herokuapp.com request_id=625f8872-f468-4468-943b-1176936ebb66 fwd="130.195.44.91" dyno= connect= service= status=503 bytes=
2015-06-24T03:05:15.895316+00:00 heroku[router]: at=error code=H10 desc="App crashed" method=GET path="/" host=powerful-cove-1691.herokuapp.com request_id=ab75f3ac-5dbb-44d3-8dfe-b605bfc43d02 fwd="130.195.44.91" dyno= connect= service= status=503 bytes=
2015-06-24T03:11:41.610835+00:00 heroku[router]: at=error code=H10 desc="App crashed" method=POST path="/auth/register" host=powerful-cove-1691.herokuapp.com request_id=7718d8c3-b442-46e8-8415-515d403692c6 fwd="130.195.44.91" dyno= connect= service= status=503 bytes=
2015-06-24T03:12:03.653164+00:00 heroku[slug-compiler]: Slug compilation started
2015-06-24T03:12:03.653194+00:00 heroku[slug-compiler]: Slug compilation finished
2015-06-24T03:12:03.733986+00:00 heroku[web.1]: State changed from crashed to starting
2015-06-24T03:12:03.582031+00:00 heroku[api]: Deploy 4dd1beb by dannycole12@gmail.com
2015-06-24T03:12:03.582031+00:00 heroku[api]: Release v50 created by dannycole12@gmail.com
2015-06-24T03:12:05.380279+00:00 heroku[web.1]: Starting process with command `node core.js`
2015-06-24T03:12:06.872453+00:00 app[web.1]: Detected 512 MB available memory, 512 MB limit per process (WEB_MEMORY)
2015-06-24T03:12:06.872479+00:00 app[web.1]: Recommending WEB_CONCURRENCY=1
2015-06-24T03:12:07.530036+00:00 app[web.1]: Wed, 24 Jun 2015 03:12:07 GMT body-parser deprecated undefined extended: provide extended option at core.js:19:20
2015-06-24T03:12:07.571343+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "UserQuestions" CASCADE;
2015-06-24T03:12:07.589976+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "followers" CASCADE;
2015-06-24T03:12:07.603022+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Questions" CASCADE;
2015-06-24T03:12:07.619870+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Tokens" CASCADE;
2015-06-24T03:12:07.635518+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Users" CASCADE;
2015-06-24T03:12:07.687350+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-24T03:12:07.700785+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Tokens" ("id"   SERIAL , "token" VARCHAR(255) UNIQUE, "expires" TIMESTAMP WITH TIME ZONE, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "UserId" INTEGER REFERENCES "Users" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));
2015-06-24T03:12:07.735743+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Trophies" CASCADE;
2015-06-24T03:12:07.768412+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Trophies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-24T03:12:07.774599+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Questions" ("id"   SERIAL , "question" VARCHAR(255) UNIQUE, "trophy" VARCHAR(255), "choice1" VARCHAR(255), "choice2" VARCHAR(255), "choice3" VARCHAR(255), "choice4" VARCHAR(255), "answer" VARCHAR(255), "value" INTEGER DEFAULT 4, "deduct" INTEGER DEFAULT 1, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
2015-06-24T03:12:07.547284+00:00 app[web.1]: Listening on port 33843
2015-06-24T03:12:07.584604+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "UserTrophies" CASCADE;
2015-06-24T03:12:07.595101+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "SecurityQuestions" CASCADE;
2015-06-24T03:12:07.610685+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Trophies" CASCADE;
2015-06-24T03:12:07.626540+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Users" CASCADE;
2015-06-24T03:12:07.642118+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Users" ("id"   SERIAL , "username" VARCHAR(255) UNIQUE, "password" VARCHAR(255), "icon" VARCHAR(255), "score" INTEGER DEFAULT 0, "admin" BOOLEAN NOT NULL DEFAULT false, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
2015-06-24T03:12:07.697257+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Tokens" CASCADE;
2015-06-24T03:12:07.731756+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Tokens' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-24T03:12:07.740142+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Trophies" ("id"   SERIAL , "country" VARCHAR(255), "name" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
2015-06-24T03:12:07.770651+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Questions" CASCADE;
2015-06-24T03:12:07.811420+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-24T03:12:07.811500+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "SecurityQuestions" CASCADE;
2015-06-24T03:12:07.816555+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "SecurityQuestions" ("id"   SERIAL , "username" VARCHAR(255), "questionOne" VARCHAR(255), "questionTwo" VARCHAR(255), "answerOne" VARCHAR(255), "answerTwo" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "UserId" INTEGER REFERENCES "Users" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));
2015-06-24T03:12:07.845736+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "followers" CASCADE;
2015-06-24T03:12:07.867950+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'followers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-24T03:12:07.876149+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "UserTrophies" ("createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "UserId" INTEGER  REFERENCES "Users" ("id") ON DELETE CASCADE ON UPDATE CASCADE, "TrophyId" INTEGER  REFERENCES "Trophies" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("UserId","TrophyId"));
2015-06-24T03:12:07.901649+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "UserQuestions" CASCADE;
2015-06-24T03:12:07.921096+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'UserQuestions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-24T03:12:07.886449+00:00 heroku[web.1]: State changed from starting to up
2015-06-24T03:12:07.842766+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'SecurityQuestions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-24T03:12:07.849011+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "followers" ("createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "UserId" INTEGER  REFERENCES "Users" ("id") ON DELETE CASCADE ON UPDATE CASCADE, "FollowerId" INTEGER  REFERENCES "Users" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("UserId","FollowerId"));
2015-06-24T03:12:07.872492+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "UserTrophies" CASCADE;
2015-06-24T03:12:07.898219+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'UserTrophies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-24T03:12:07.904990+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "UserQuestions" ("createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "UserId" INTEGER  REFERENCES "Users" ("id") ON DELETE CASCADE ON UPDATE CASCADE, "QuestionId" INTEGER  REFERENCES "Questions" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("UserId","QuestionId"));
2015-06-24T03:12:08.045301+00:00 app[web.1]: Executing (default): INSERT INTO "Users" ("id","username","password","icon","score","admin","updatedAt","createdAt") VALUES (DEFAULT,'admin','$2a$10$jlxjNexFjQhgIyI7IBjDYeJEioolmKO3AeHX5VBvl7fJtsoXAMx9C','nz.png',0,true,'2015-06-24 03:12:08.040 +00:00','2015-06-24 03:12:08.040 +00:00') RETURNING *;
2015-06-24T03:12:08.156367+00:00 app[web.1]: Executing (default): INSERT INTO "Users" ("id","username","password","icon","score","admin","updatedAt","createdAt") VALUES (DEFAULT,'demo','$2a$10$j.v3Y/zbVN8QjTF3mi8uHugR.tw2msdk6K/vIBQGeweemKaeaK5Bm','nz.png',0,false,'2015-06-24 03:12:08.155 +00:00','2015-06-24 03:12:08.155 +00:00') RETURNING *;
2015-06-24T03:12:08.174905+00:00 app[web.1]: Executing (default): INSERT INTO "followers" ("UserId","FollowerId","updatedAt","createdAt") VALUES (1,2,'2015-06-24 03:12:08.174 +00:00','2015-06-24 03:12:08.174 +00:00') RETURNING *;
2015-06-24T03:12:08.170131+00:00 app[web.1]: Executing (default): SELECT "User"."id", "User"."username", "User"."password", "User"."icon", "User"."score", "User"."admin", "User"."createdAt", "User"."updatedAt", "followers"."createdAt" AS "followers.createdAt", "followers"."updatedAt" AS "followers.updatedAt", "followers"."UserId" AS "followers.UserId", "followers"."FollowerId" AS "followers.FollowerId" FROM "Users" AS "User" INNER JOIN "followers" AS "followers" ON "User"."id" = "followers"."FollowerId" AND "followers"."UserId" = 1 WHERE ("User"."id" = 2);
2015-06-24T03:12:10.866809+00:00 app[web.1]: Executing (default): SELECT "id", "username", "password", "icon", "score", "admin", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."username" = 'testing' LIMIT 1;
2015-06-24T03:12:10.972701+00:00 app[web.1]: Executing (default): INSERT INTO "Users" ("id","username","password","score","admin","updatedAt","createdAt") VALUES (DEFAULT,'testing','$2a$10$FEmWMi0NV6ZcN7SeZ9T5kuZ2n27oRjwh.tzjYLzahbGNyHiHEXQpe',0,false,'2015-06-24 03:12:10.971 +00:00','2015-06-24 03:12:10.971 +00:00') RETURNING *;
2015-06-24T03:12:11.194328+00:00 app[web.1]: Executing (default): INSERT INTO "SecurityQuestions" ("id","username","questionOne","questionTwo","answerOne","answerTwo","UserId","updatedAt","createdAt") VALUES (DEFAULT,'testing','what''s my name','what''s my mums name?','$2a$10$ebizN8IG0OWQcudEEuNpIeiC1qLUe4C5IZZr.tmvcwR1iIwpBAqeS','$2a$10$qIkcRhArJrSydnXb/wFUMOZnHgPQKAxBEZH4aSH3UDqkG15nzzCB6',3,'2015-06-24 03:12:11.193 +00:00','2015-06-24 03:12:11.193 +00:00') RETURNING *;
2015-06-24T03:12:11.209465+00:00 heroku[router]: at=info method=POST path="/auth/register" host=powerful-cove-1691.herokuapp.com request_id=c01559d5-b9fd-4c15-b89a-83e61ceca855 fwd="130.195.44.91" dyno=web.1 connect=3ms service=367ms status=200 bytes=233
2015-06-24T03:24:26.262041+00:00 heroku[api]: Deploy 762ef28 by dannycole12@gmail.com
2015-06-24T03:24:26.262041+00:00 heroku[api]: Release v51 created by dannycole12@gmail.com
2015-06-24T03:24:26.351648+00:00 heroku[web.1]: State changed from up to starting
2015-06-24T03:24:26.313654+00:00 heroku[slug-compiler]: Slug compilation started
2015-06-24T03:24:26.313673+00:00 heroku[slug-compiler]: Slug compilation finished
2015-06-24T03:24:27.911651+00:00 heroku[web.1]: Starting process with command `node core.js`
2015-06-24T03:24:29.136123+00:00 app[web.1]: Detected 512 MB available memory, 512 MB limit per process (WEB_MEMORY)
2015-06-24T03:24:29.136153+00:00 app[web.1]: Recommending WEB_CONCURRENCY=1
2015-06-24T03:24:29.875787+00:00 app[web.1]: Listening on port 14804
2015-06-24T03:24:30.026990+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "UserTrophies" CASCADE;
2015-06-24T03:24:30.077073+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "SecurityQuestions" CASCADE;
2015-06-24T03:24:29.855368+00:00 app[web.1]: Wed, 24 Jun 2015 03:24:29 GMT body-parser deprecated undefined extended: provide extended option at core.js:19:20
2015-06-24T03:24:29.988018+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "UserQuestions" CASCADE;
2015-06-24T03:24:30.067066+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "followers" CASCADE;
2015-06-24T03:24:30.098522+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Questions" CASCADE;
2015-06-24T03:24:30.157438+00:00 heroku[web.1]: State changed from starting to up
2015-06-24T03:24:30.184180+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Tokens" CASCADE;
2015-06-24T03:24:30.202794+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Users" CASCADE;
2015-06-24T03:24:30.159478+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Trophies" CASCADE;
2015-06-24T03:24:30.192439+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Users" CASCADE;
2015-06-24T03:24:30.439032+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Users" ("id"   SERIAL , "username" VARCHAR(255) UNIQUE, "password" VARCHAR(255), "icon" VARCHAR(255), "score" INTEGER DEFAULT 0, "admin" BOOLEAN NOT NULL DEFAULT false, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
2015-06-24T03:24:30.547297+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Tokens" CASCADE;
2015-06-24T03:24:30.599669+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Tokens' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-24T03:24:30.529483+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-24T03:24:30.577287+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Tokens" ("id"   SERIAL , "token" VARCHAR(255) UNIQUE, "expires" TIMESTAMP WITH TIME ZONE, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "UserId" INTEGER REFERENCES "Users" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));
2015-06-24T03:24:30.810414+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Trophies" CASCADE;
2015-06-24T03:24:30.854153+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Trophies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-24T03:24:30.814947+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Trophies" ("id"   SERIAL , "country" VARCHAR(255), "name" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
2015-06-24T03:24:30.876645+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Questions" CASCADE;
2015-06-24T03:24:30.915272+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-24T03:24:30.929317+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "SecurityQuestions" ("id"   SERIAL , "username" VARCHAR(255), "questionOne" VARCHAR(255), "questionTwo" VARCHAR(255), "answerOne" VARCHAR(255), "answerTwo" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "UserId" INTEGER REFERENCES "Users" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));
2015-06-24T03:24:30.881013+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Questions" ("id"   SERIAL , "question" VARCHAR(255) UNIQUE, "trophy" VARCHAR(255), "choice1" VARCHAR(255), "choice2" VARCHAR(255), "choice3" VARCHAR(255), "choice4" VARCHAR(255), "answer" VARCHAR(255), "value" INTEGER DEFAULT 4, "deduct" INTEGER DEFAULT 1, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
2015-06-24T03:24:30.922915+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "SecurityQuestions" CASCADE;
2015-06-24T03:24:30.981398+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "followers" CASCADE;
2015-06-24T03:24:30.953655+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'SecurityQuestions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-24T03:24:31.013162+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'followers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-24T03:24:30.985910+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "followers" ("createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "UserId" INTEGER  REFERENCES "Users" ("id") ON DELETE CASCADE ON UPDATE CASCADE, "FollowerId" INTEGER  REFERENCES "Users" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("UserId","FollowerId"));
2015-06-24T03:24:31.017670+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "UserTrophies" CASCADE;
2015-06-24T03:24:31.021116+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "UserTrophies" ("createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "UserId" INTEGER  REFERENCES "Users" ("id") ON DELETE CASCADE ON UPDATE CASCADE, "TrophyId" INTEGER  REFERENCES "Trophies" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("UserId","TrophyId"));
2015-06-24T03:24:31.060030+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "UserQuestions" CASCADE;
2015-06-24T03:24:31.043775+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'UserTrophies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-24T03:24:31.076669+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "UserQuestions" ("createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "UserId" INTEGER  REFERENCES "Users" ("id") ON DELETE CASCADE ON UPDATE CASCADE, "QuestionId" INTEGER  REFERENCES "Questions" ("id") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("UserId","QuestionId"));
2015-06-24T03:24:31.206023+00:00 app[web.1]: Executing (default): INSERT INTO "Users" ("id","username","password","icon","score","admin","updatedAt","createdAt") VALUES (DEFAULT,'admin','$2a$10$yY6/Lvkptz5esP8SxgGhNe1PHB7XmTSfXNx0rQdNL.P320PA1qa26','nz.png',0,true,'2015-06-24 03:24:31.201 +00:00','2015-06-24 03:24:31.201 +00:00') RETURNING *;
2015-06-24T03:24:31.093420+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'UserQuestions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-24T03:24:31.323861+00:00 app[web.1]: Executing (default): INSERT INTO "Users" ("id","username","password","icon","score","admin","updatedAt","createdAt") VALUES (DEFAULT,'demo','$2a$10$UDxfVaa6t2qfxO/6DwaBQuG7doCG7.jyweXF2BzO0/EIkEt57JuOa','nz.png',0,false,'2015-06-24 03:24:31.322 +00:00','2015-06-24 03:24:31.322 +00:00') RETURNING *;
2015-06-24T03:24:31.338227+00:00 app[web.1]: Executing (default): SELECT "User"."id", "User"."username", "User"."password", "User"."icon", "User"."score", "User"."admin", "User"."createdAt", "User"."updatedAt", "followers"."createdAt" AS "followers.createdAt", "followers"."updatedAt" AS "followers.updatedAt", "followers"."UserId" AS "followers.UserId", "followers"."FollowerId" AS "followers.FollowerId" FROM "Users" AS "User" INNER JOIN "followers" AS "followers" ON "User"."id" = "followers"."FollowerId" AND "followers"."UserId" = 1 WHERE ("User"."id" = 2);
2015-06-24T03:24:31.344550+00:00 app[web.1]: Executing (default): INSERT INTO "followers" ("UserId","FollowerId","updatedAt","createdAt") VALUES (1,2,'2015-06-24 03:24:31.343 +00:00','2015-06-24 03:24:31.343 +00:00') RETURNING *;
2015-06-24T03:24:33.052432+00:00 heroku[web.1]: Stopping all processes with SIGTERM
2015-06-24T03:24:35.545922+00:00 heroku[web.1]: Process exited with status 143
2015-06-24T03:25:09.371169+00:00 heroku[router]: at=info method=POST path="/auth/register" host=powerful-cove-1691.herokuapp.com request_id=7b822fb5-126f-4a33-a3b7-725b61bab9c5 fwd="130.195.44.108" dyno=web.1 connect=5ms service=28ms status=400 bytes=255
2015-06-24T03:26:25.285800+00:00 heroku[router]: at=info method=POST path="/auth/register" host=powerful-cove-1691.herokuapp.com request_id=df99a1a9-8c6e-49d2-bea4-03704b9b948e fwd="130.195.44.108" dyno=web.1 connect=0ms service=5ms status=400 bytes=255
2015-06-24T03:28:58.700234+00:00 heroku[router]: at=info method=POST path="/auth/register" host=powerful-cove-1691.herokuapp.com request_id=69534655-bc49-46d4-9327-6b5fedeab8aa fwd="130.195.44.108" dyno=web.1 connect=5ms service=5ms status=400 bytes=255
2015-06-24T03:29:20.295420+00:00 heroku[api]: Deploy 264be4f by dannycole12@gmail.com
2015-06-24T03:29:20.295420+00:00 heroku[api]: Release v52 created by dannycole12@gmail.com
2015-06-24T03:29:20.403988+00:00 heroku[slug-compiler]: Slug compilation started
2015-06-24T03:29:20.404021+00:00 heroku[slug-compiler]: Slug compilation finished
2015-06-24T03:29:20.601098+00:00 heroku[web.1]: State changed from up to starting
2015-06-24T03:29:22.551554+00:00 heroku[web.1]: Starting process with command `node core.js`
2015-06-24T03:29:22.945277+00:00 heroku[web.1]: Stopping all processes with SIGTERM
2015-06-24T03:29:24.121085+00:00 app[web.1]: Detected 512 MB available memory, 512 MB limit per process (WEB_MEMORY)
2015-06-24T03:29:24.121111+00:00 app[web.1]: Recommending WEB_CONCURRENCY=1
2015-06-24T03:29:24.366653+00:00 heroku[web.1]: Process exited with status 143
2015-06-24T03:29:24.733845+00:00 app[web.1]: 
2015-06-24T03:29:24.733933+00:00 app[web.1]: /app/auth.js:79
2015-06-24T03:29:24.734189+00:00 app[web.1]:     if(!req.body.hasOwnProperty('username'){
2015-06-24T03:29:24.734409+00:00 app[web.1]:                                            ^
2015-06-24T03:29:24.737592+00:00 app[web.1]: SyntaxError: Unexpected token {
2015-06-24T03:29:24.737595+00:00 app[web.1]:     at Module._compile (module.js:439:25)
2015-06-24T03:29:24.737596+00:00 app[web.1]:     at Object.Module._extensions..js (module.js:474:10)
2015-06-24T03:29:24.737598+00:00 app[web.1]:     at Module.load (module.js:356:32)
2015-06-24T03:29:24.737599+00:00 app[web.1]:     at Function.Module._load (module.js:312:12)
2015-06-24T03:29:24.737601+00:00 app[web.1]:     at Module.require (module.js:364:17)
2015-06-24T03:29:24.737602+00:00 app[web.1]:     at require (module.js:380:17)
2015-06-24T03:29:24.737604+00:00 app[web.1]:     at Object.<anonymous> (/app/core.js:9:12)
2015-06-24T03:29:24.737605+00:00 app[web.1]:     at Module._compile (module.js:456:26)
2015-06-24T03:29:24.737606+00:00 app[web.1]:     at Object.Module._extensions..js (module.js:474:10)
2015-06-24T03:29:24.737608+00:00 app[web.1]:     at Module.load (module.js:356:32)
2015-06-24T03:29:24.737609+00:00 app[web.1]:     at Function.Module._load (module.js:312:12)
2015-06-24T03:29:24.737610+00:00 app[web.1]:     at Function.Module.runMain (module.js:497:10)
2015-06-24T03:29:24.737612+00:00 app[web.1]:     at startup (node.js:119:16)
2015-06-24T03:29:24.737613+00:00 app[web.1]:     at node.js:935:3
2015-06-24T03:29:25.572562+00:00 heroku[web.1]: Process exited with status 8
2015-06-24T03:29:25.581163+00:00 heroku[web.1]: State changed from starting to crashed
2015-06-24T03:29:25.582145+00:00 heroku[web.1]: State changed from crashed to starting
2015-06-24T03:29:28.003776+00:00 heroku[web.1]: Starting process with command `node core.js`
2015-06-24T03:29:29.845573+00:00 app[web.1]: Detected 512 MB available memory, 512 MB limit per process (WEB_MEMORY)
2015-06-24T03:29:29.845634+00:00 app[web.1]: Recommending WEB_CONCURRENCY=1
2015-06-24T03:29:30.535004+00:00 app[web.1]: 
2015-06-24T03:29:30.535087+00:00 app[web.1]: /app/auth.js:79
2015-06-24T03:29:30.535335+00:00 app[web.1]:     if(!req.body.hasOwnProperty('username'){
2015-06-24T03:29:30.535433+00:00 app[web.1]:                                            ^
2015-06-24T03:29:30.538569+00:00 app[web.1]: SyntaxError: Unexpected token {
2015-06-24T03:29:30.538575+00:00 app[web.1]:     at Module._compile (module.js:439:25)
2015-06-24T03:29:30.538577+00:00 app[web.1]:     at Object.Module._extensions..js (module.js:474:10)
2015-06-24T03:29:30.538578+00:00 app[web.1]:     at Module.load (module.js:356:32)
2015-06-24T03:29:30.538580+00:00 app[web.1]:     at Function.Module._load (module.js:312:12)
2015-06-24T03:29:30.538582+00:00 app[web.1]:     at Module.require (module.js:364:17)
2015-06-24T03:29:30.538583+00:00 app[web.1]:     at require (module.js:380:17)
2015-06-24T03:29:30.538584+00:00 app[web.1]:     at Object.<anonymous> (/app/core.js:9:12)
2015-06-24T03:29:30.538585+00:00 app[web.1]:     at Module._compile (module.js:456:26)
2015-06-24T03:29:30.538586+00:00 app[web.1]:     at Object.Module._extensions..js (module.js:474:10)
2015-06-24T03:29:30.538587+00:00 app[web.1]:     at Module.load (module.js:356:32)
2015-06-24T03:29:30.538588+00:00 app[web.1]:     at Function.Module._load (module.js:312:12)
2015-06-24T03:29:30.538590+00:00 app[web.1]:     at Function.Module.runMain (module.js:497:10)
2015-06-24T03:29:30.538591+00:00 app[web.1]:     at startup (node.js:119:16)
2015-06-24T03:29:30.538592+00:00 app[web.1]:     at node.js:935:3
2015-06-24T03:29:31.322304+00:00 heroku[web.1]: State changed from starting to crashed
2015-06-24T03:29:31.319015+00:00 heroku[web.1]: Process exited with status 8
2015-06-24T03:29:31.502010+00:00 heroku[router]: at=error code=H10 desc="App crashed" method=POST path="/auth/register" host=powerful-cove-1691.herokuapp.com request_id=2d297752-5fee-4dcf-baf7-6740ce59f674 fwd="130.195.44.108" dyno= connect= service= status=503 bytes=
2015-06-24T03:30:10.156416+00:00 heroku[router]: at=error code=H10 desc="App crashed" method=POST path="/auth/register" host=powerful-cove-1691.herokuapp.com request_id=39b8c941-7242-4f81-9649-840c5963540e fwd="130.195.44.108" dyno= connect= service= status=503 bytes=
2015-06-24T03:30:15.684020+00:00 heroku[router]: at=error code=H10 desc="App crashed" method=POST path="/auth/register" host=powerful-cove-1691.herokuapp.com request_id=78bd8fe9-f5e5-4de5-8e5c-3e1016d94646 fwd="130.195.44.91" dyno= connect= service= status=503 bytes=
