2015-06-19T03:46:25.952300+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Quotes" CASCADE;
2015-06-19T03:46:26.004267+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Quotes' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T03:46:26.028360+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "SecurityQuestions" ("id"   SERIAL , "username" VARCHAR(255), "questionOne" VARCHAR(255), "questionTwo" VARCHAR(255), "answerOne" VARCHAR(255), "answerTwo" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
2015-06-19T03:46:26.007056+00:00 heroku[web.1]: State changed from starting to up
2015-06-19T03:46:26.011783+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "SecurityQuestions" CASCADE;
2015-06-19T03:46:26.069774+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'SecurityQuestions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T03:46:26.473332+00:00 app[web.1]: Executing (default): INSERT INTO "Users" ("id","username","password","score","updatedAt","createdAt") VALUES (DEFAULT,'admin','$2a$10$.1rlJVAO6s46QnvtY5An..2p3NtF5tkDE3YfiInGVII/1O.YV7s1O',0,'2015-06-19 03:46:26.467 +00:00','2015-06-19 03:46:26.467 +00:00') RETURNING *;
2015-06-19T03:46:26.778017+00:00 app[web.1]: Executing (default): INSERT INTO "Users" ("id","username","password","score","updatedAt","createdAt") VALUES (DEFAULT,'demo','$2a$10$JP2NJJdgXEfkbMfkuSenbOv43kE1DDoTVRswWR17pkpw4djU7lm.6',0,'2015-06-19 03:46:26.776 +00:00','2015-06-19 03:46:26.776 +00:00') RETURNING *;
2015-06-19T03:46:57.918408+00:00 app[web.1]: Executing (default): SELECT "id", "username", "password", "score", "createdAt", "updatedAt", "following" FROM "Users" AS "User" WHERE "User"."username" = 'dan' LIMIT 1;
2015-06-19T03:46:58.032010+00:00 app[web.1]: Executing (default): INSERT INTO "Users" ("id","username","password","score","updatedAt","createdAt") VALUES (DEFAULT,'dan','$2a$10$CVi0lRDsX//Pl2Y5J.BBg.c4i7GaIK2AAY4davfkIAXIWaucX8jlm',0,'2015-06-19 03:46:58.031 +00:00','2015-06-19 03:46:58.031 +00:00') RETURNING *;
2015-06-19T03:46:58.260469+00:00 app[web.1]: Executing (default): INSERT INTO "SecurityQuestions" ("id","username","questionOne","questionTwo","answerOne","answerTwo","updatedAt","createdAt") VALUES (DEFAULT,'dan','What''s my middle name?','What''s my last name?','$2a$10$PtltkWoME9chSsN4gHAGsOmJ/ySiy5mQRPmuURMn2I/wobHYFsJHm','$2a$10$X6eRGLa8oqvpiqCoswOrMuOHgJSdYaz0vTzlpW9c9cSmdPVLchi4S','2015-06-19 03:46:58.258 +00:00','2015-06-19 03:46:58.258 +00:00') RETURNING *;
2015-06-19T03:46:58.280722+00:00 heroku[router]: at=info method=POST path="/auth/register" host=powerful-cove-1691.herokuapp.com request_id=36ddd3ef-2954-4875-9d0c-74c9b184108b fwd="125.239.160.28" dyno=web.1 connect=2ms service=396ms status=200 bytes=233
2015-06-19T03:47:12.338022+00:00 heroku[router]: at=info method=POST path="/auth/securityQuestions" host=powerful-cove-1691.herokuapp.com request_id=1ff473b7-41cb-4752-9c90-c3bfdc8920d5 fwd="125.239.160.28" dyno=web.1 connect=8ms service=97ms status=200 bytes=299
2015-06-19T03:47:12.310385+00:00 app[web.1]: Executing (default): SELECT "id", "username", "questionOne", "questionTwo", "answerOne", "answerTwo", "createdAt", "updatedAt" FROM "SecurityQuestions" AS "SecurityQuestions" WHERE "SecurityQuestions"."username" = 'dan' LIMIT 1;
2015-06-19T03:47:55.401440+00:00 heroku[router]: at=info method=POST path="/auth/securityQuestions" host=powerful-cove-1691.herokuapp.com request_id=ecb2a0fa-e50b-455e-9dc7-98ea1a532d2f fwd="125.239.160.28" dyno=web.1 connect=2ms service=30ms status=404 bytes=251
2015-06-19T03:47:55.389557+00:00 app[web.1]: Executing (default): SELECT "id", "username", "questionOne", "questionTwo", "answerOne", "answerTwo", "createdAt", "updatedAt" FROM "SecurityQuestions" AS "SecurityQuestions" WHERE "SecurityQuestions"."username" = 'adads' LIMIT 1;
2015-06-19T03:51:11.513747+00:00 heroku[api]: Deploy 019ddad by dannycole12@gmail.com
2015-06-19T03:51:11.513747+00:00 heroku[api]: Release v37 created by dannycole12@gmail.com
2015-06-19T03:51:11.565870+00:00 heroku[slug-compiler]: Slug compilation started
2015-06-19T03:51:11.565893+00:00 heroku[slug-compiler]: Slug compilation finished
2015-06-19T03:51:11.918369+00:00 heroku[web.1]: State changed from up to starting
2015-06-19T03:51:13.958722+00:00 heroku[web.1]: Starting process with command `node core.js`
2015-06-19T03:51:15.301727+00:00 heroku[web.1]: Stopping all processes with SIGTERM
2015-06-19T03:51:15.866822+00:00 app[web.1]: Detected 512 MB available memory, 512 MB limit per process (WEB_MEMORY)
2015-06-19T03:51:15.866842+00:00 app[web.1]: Recommending WEB_CONCURRENCY=1
2015-06-19T03:51:16.970507+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Tokens" CASCADE;
2015-06-19T03:51:16.909610+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Users" CASCADE;
2015-06-19T03:51:16.851167+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "SecurityQuestions" CASCADE;
2015-06-19T03:51:16.926359+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Users" ("id"   SERIAL , "username" VARCHAR(255) UNIQUE, "password" VARCHAR(255), "score" INTEGER DEFAULT 0, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "following" INTEGER REFERENCES "Users" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));
2015-06-19T03:51:17.024400+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Quotes" CASCADE;
2015-06-19T03:51:16.993852+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Tokens' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T03:51:17.000574+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Trophies" ("id"   SERIAL , "country" VARCHAR(255), "name" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
2015-06-19T03:51:16.803222+00:00 app[web.1]: Fri, 19 Jun 2015 03:51:16 GMT body-parser deprecated undefined extended: provide extended option at core.js:19:20
2015-06-19T03:51:16.886508+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Trophies" CASCADE;
2015-06-19T03:51:16.821691+00:00 app[web.1]: Listening on port 58325
2015-06-19T03:51:16.875788+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Quotes" CASCADE;
2015-06-19T03:51:16.895243+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Tokens" CASCADE;
2015-06-19T03:51:16.919663+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Users" CASCADE;
2015-06-19T03:51:16.963950+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T03:51:16.996639+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Trophies" CASCADE;
2015-06-19T03:51:16.973675+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Tokens" ("id"   SERIAL , "token" VARCHAR(255) UNIQUE, "expires" TIMESTAMP WITH TIME ZONE, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "UserId" INTEGER REFERENCES "Users" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));
2015-06-19T03:51:17.021424+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Trophies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T03:51:17.029921+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Quotes" ("id"   SERIAL , "question" VARCHAR(255), "trophy" VARCHAR(255), "choice1" VARCHAR(255), "choice2" VARCHAR(255), "choice3" VARCHAR(255), "choice4" VARCHAR(255), "answer" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
2015-06-19T03:51:17.058412+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Quotes' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T03:51:17.065609+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "SecurityQuestions" CASCADE;
2015-06-19T03:51:17.065631+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "SecurityQuestions" ("id"   SERIAL , "username" VARCHAR(255), "questionOne" VARCHAR(255), "questionTwo" VARCHAR(255), "answerOne" VARCHAR(255), "answerTwo" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
2015-06-19T03:51:17.087232+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'SecurityQuestions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T03:51:17.274480+00:00 app[web.1]: Executing (default): INSERT INTO "Users" ("id","username","password","score","updatedAt","createdAt") VALUES (DEFAULT,'demo','$2a$10$XlBH9xylSZGl36RWoe8su.id89SihbQMIkkm4n9arZEuXbCTFAFQa',0,'2015-06-19 03:51:17.273 +00:00','2015-06-19 03:51:17.273 +00:00') RETURNING *;
2015-06-19T03:51:17.183112+00:00 app[web.1]: Executing (default): INSERT INTO "Users" ("id","username","password","score","updatedAt","createdAt") VALUES (DEFAULT,'admin','$2a$10$t3CExpF9HdcBlPb7pUmfb.48deQuvDHrAezWL8qnD16wb4aUIpfqO',0,'2015-06-19 03:51:17.178 +00:00','2015-06-19 03:51:17.178 +00:00') RETURNING *;
2015-06-19T03:51:17.198899+00:00 heroku[web.1]: Process exited with status 143
2015-06-19T03:51:17.604776+00:00 heroku[web.1]: State changed from starting to up
2015-06-19T03:51:18.870190+00:00 heroku[router]: at=info method=GET path="/" host=powerful-cove-1691.herokuapp.com request_id=38f72355-a69e-4b62-86a4-62731d959f73 fwd="125.239.160.28" dyno=web.1 connect=1ms service=15ms status=200 bytes=2936
2015-06-19T03:51:25.361597+00:00 app[web.1]: Executing (default): SELECT "id", "username", "password", "score", "createdAt", "updatedAt", "following" FROM "Users" AS "User" WHERE "User"."username" = 'admin' LIMIT 1;
2015-06-19T03:51:25.471584+00:00 heroku[router]: at=info method=POST path="/auth/login" host=powerful-cove-1691.herokuapp.com request_id=faae2156-7ca8-473c-b0bc-87daa4a1ae29 fwd="125.239.160.28" dyno=web.1 connect=1ms service=136ms status=200 bytes=463
2015-06-19T03:51:25.463093+00:00 app[web.1]: Executing (default): INSERT INTO "Tokens" ("id","token","expires","UserId","updatedAt","createdAt") VALUES (DEFAULT,'cc95a24f73e8ec3d4e4e6917547950e6fefeabfb7c279934fdfab6772eb477b3','2015-06-19 04:01:25.460 +00:00',1,'2015-06-19 03:51:25.462 +00:00','2015-06-19 03:51:25.462 +00:00') RETURNING *;
2015-06-19T03:52:35.655820+00:00 heroku[router]: at=info method=GET path="/" host=powerful-cove-1691.herokuapp.com request_id=cbfec953-cfaa-4a4c-880e-fa702586f159 fwd="125.239.160.28" dyno=web.1 connect=1ms service=3ms status=304 bytes=235
2015-06-19T03:52:42.802763+00:00 app[web.1]: Executing (default): SELECT "id", "username", "password", "score", "createdAt", "updatedAt", "following" FROM "Users" AS "User" WHERE "User"."username" = 'admin' LIMIT 1;
2015-06-19T03:52:42.896700+00:00 heroku[router]: at=info method=POST path="/auth/login" host=powerful-cove-1691.herokuapp.com request_id=abbe8a6e-5c1c-40d9-ae0c-28cbabdcdd48 fwd="125.239.160.28" dyno=web.1 connect=1ms service=113ms status=200 bytes=463
2015-06-19T03:52:42.892430+00:00 app[web.1]: Executing (default): INSERT INTO "Tokens" ("id","token","expires","UserId","updatedAt","createdAt") VALUES (DEFAULT,'3fafe81c5ca17e9cd801ea59888de1067adad92a63030121e97a357abfbd1677','2015-06-19 04:02:42.888 +00:00',1,'2015-06-19 03:52:42.891 +00:00','2015-06-19 03:52:42.891 +00:00') RETURNING *;
2015-06-19T04:03:37.432206+00:00 heroku[api]: Deploy f9b6a71 by dannycole12@gmail.com
2015-06-19T04:03:37.432206+00:00 heroku[api]: Release v38 created by dannycole12@gmail.com
2015-06-19T04:03:37.531460+00:00 heroku[slug-compiler]: Slug compilation started
2015-06-19T04:03:37.531493+00:00 heroku[slug-compiler]: Slug compilation finished
2015-06-19T04:03:37.601088+00:00 heroku[web.1]: State changed from up to starting
2015-06-19T04:03:39.951296+00:00 heroku[web.1]: Stopping all processes with SIGTERM
2015-06-19T04:03:40.392224+00:00 heroku[web.1]: Starting process with command `node core.js`
2015-06-19T04:03:41.822551+00:00 heroku[web.1]: Process exited with status 143
2015-06-19T04:03:42.737924+00:00 app[web.1]: Detected 512 MB available memory, 512 MB limit per process (WEB_MEMORY)
2015-06-19T04:03:42.737944+00:00 app[web.1]: Recommending WEB_CONCURRENCY=1
2015-06-19T04:03:43.638742+00:00 app[web.1]: Fri, 19 Jun 2015 04:03:43 GMT body-parser deprecated undefined extended: provide extended option at core.js:19:20
2015-06-19T04:03:43.746098+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "SecurityQuestions" CASCADE;
2015-06-19T04:03:43.792406+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Trophies" CASCADE;
2015-06-19T04:03:43.813131+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Users" CASCADE;
2015-06-19T04:03:43.847138+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Users" ("id"   SERIAL , "username" VARCHAR(255) UNIQUE, "password" VARCHAR(255), "score" INTEGER DEFAULT 0, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "following" INTEGER REFERENCES "Users" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));
2015-06-19T04:03:43.782278+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Quotes" CASCADE;
2015-06-19T04:03:43.823386+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Users" CASCADE;
2015-06-19T04:03:43.802396+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Tokens" CASCADE;
2015-06-19T04:03:43.894186+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T04:03:43.665022+00:00 app[web.1]: Listening on port 11898
2015-06-19T04:03:43.904527+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Tokens" CASCADE;
2015-06-19T04:03:43.934163+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Tokens" ("id"   SERIAL , "token" VARCHAR(255) UNIQUE, "expires" TIMESTAMP WITH TIME ZONE, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "UserId" INTEGER REFERENCES "Users" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));
2015-06-19T04:03:43.976714+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Trophies" CASCADE;
2015-06-19T04:03:44.011583+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Trophies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T04:03:44.032362+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Quotes" ("id"   SERIAL , "question" VARCHAR(255), "trophy" VARCHAR(255), "choice1" VARCHAR(255), "choice2" VARCHAR(255), "choice3" VARCHAR(255), "choice4" VARCHAR(255), "answer" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
2015-06-19T04:03:44.062301+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "SecurityQuestions" CASCADE;
2015-06-19T04:03:44.090067+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'SecurityQuestions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T04:03:43.971040+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Tokens' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T04:03:43.980343+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Trophies" ("id"   SERIAL , "country" VARCHAR(255), "name" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
2015-06-19T04:03:44.022839+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Quotes" CASCADE;
2015-06-19T04:03:44.056933+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oi
d = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Quotes' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T04:03:44.067997+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "SecurityQuestions" ("id"   SERIAL , "username" VARCHAR(255), "questionOne" VARCHAR(255), "questionTwo" VARCHAR(255), "answerOne" VARCHAR(255), "answerTwo" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
2015-06-19T04:03:44.230916+00:00 heroku[web.1]: State changed from starting to up
2015-06-19T04:03:44.256446+00:00 app[web.1]: Executing (default): INSERT INTO "Users" ("id","username","password","score","updatedAt","createdAt") VALUES (DEFAULT,'admin','$2a$10$lWA3Tv2hPTJ.Q.y9euOGh.hlZ37MbCug8nWuoJCIQWn4xo0quIUQe',0,'2015-06-19 04:03:44.225 +00:00','2015-06-19 04:03:44.225 +00:00') RETURNING *;
2015-06-19T04:03:44.603735+00:00 app[web.1]: Executing (default): INSERT INTO "Users" ("id","username","password","score","updatedAt","createdAt") VALUES (DEFAULT,'demo','$2a$10$I3Jl4bqoPWZKf2jDtF3qBelXa3hiidRRlRb6htqEBMGc6VJMnu/Ki',0,'2015-06-19 04:03:44.602 +00:00','2015-06-19 04:03:44.602 +00:00') RETURNING *;
2015-06-19T04:03:49.943419+00:00 app[web.1]: Executing (default): SELECT "id", "username", "password", "score", "createdAt", "updatedAt", "following" FROM "Users" AS "User" WHERE "User"."username" = 'dan' LIMIT 1;
2015-06-19T04:03:50.040064+00:00 app[web.1]: Executing (default): INSERT INTO "Users" ("id","username","password","score","updatedAt","createdAt") VALUES (DEFAULT,'dan','$2a$10$MFZJQ45UvXShCvsAaJR1qemnqtYO2Wx/dD8mqdq5SyALp3uxqGA3m',0,'2015-06-19 04:03:50.039 +00:00','2015-06-19 04:03:50.039 +00:00') RETURNING *;
2015-06-19T04:03:50.217854+00:00 app[web.1]: Executing (default): INSERT INTO "SecurityQuestions" ("id","username","questionOne","questionTwo","answerOne","answerTwo","updatedAt","createdAt") VALUES (DEFAULT,'dan','What''s my middle name?','What''s my last name?','$2a$10$0hs2MT6OnvAP4CYRV4bwU.eRSXK2wvctiBqucTlScd7VimsonEu06','$2a$10$yFRn8AYAyJJiUP3oFdCcYe/wBMOhSLn4LSrIMLOIyrPuil0EMoOky','2015-06-19 04:03:50.216 +00:00','2015-06-19 04:03:50.216 +00:00') RETURNING *;
2015-06-19T04:03:50.228697+00:00 heroku[router]: at=info method=POST path="/auth/register" host=powerful-cove-1691.herokuapp.com request_id=df854b3c-ec5f-4abb-b570-a1f4b981ca61 fwd="125.239.160.28" dyno=web.1 connect=1ms service=314ms status=200 bytes=233
2015-06-19T04:04:18.944618+00:00 heroku[router]: at=info method=POST path="/auth/securityQuestions" host=powerful-cove-1691.herokuapp.com request_id=fc6aaaac-82e6-4211-b966-e364ef9b877f fwd="125.239.160.28" dyno=web.1 connect=1ms service=39ms status=200 bytes=299
2015-06-19T04:04:18.931112+00:00 app[web.1]: Executing (default): SELECT "id", "username", "questionOne", "questionTwo", "answerOne", "answerTwo", "createdAt", "updatedAt" FROM "SecurityQuestions" AS "SecurityQuestions" WHERE "SecurityQuestions"."username" = 'dan' LIMIT 1;
2015-06-19T04:04:52.871797+00:00 heroku[router]: at=info method=POST path="/auth/securityQuestionAnswer" host=powerful-cove-1691.herokuapp.com request_id=11bbd500-e6a7-43c8-bdff-d4bcb9a580cd fwd="125.239.160.28" dyno=web.1 connect=1ms service=15ms status=404 bytes=271
2015-06-19T04:05:58.964163+00:00 heroku[slug-compiler]: Slug compilation started
2015-06-19T04:05:58.964182+00:00 heroku[slug-compiler]: Slug compilation finished
2015-06-19T04:05:58.899406+00:00 heroku[api]: Deploy 39e3fda by dannycole12@gmail.com
2015-06-19T04:05:58.899406+00:00 heroku[api]: Release v39 created by dannycole12@gmail.com
2015-06-19T04:05:59.057873+00:00 heroku[web.1]: State changed from up to starting
2015-06-19T04:06:01.381116+00:00 heroku[web.1]: Starting process with command `node core.js`
2015-06-19T04:06:02.519795+00:00 heroku[web.1]: Stopping all processes with SIGTERM
2015-06-19T04:06:03.426724+00:00 app[web.1]: Detected 512 MB available memory, 512 MB limit per process (WEB_MEMORY)
2015-06-19T04:06:03.426749+00:00 app[web.1]: Recommending WEB_CONCURRENCY=1
2015-06-19T04:06:04.036487+00:00 app[web.1]: Fri, 19 Jun 2015 04:06:04 GMT body-parser deprecated undefined extended: provide extended option at core.js:19:20
2015-06-19T04:06:04.052958+00:00 app[web.1]: Listening on port 21021
2015-06-19T04:06:04.471842+00:00 heroku[web.1]: Process exited with status 143
2015-06-19T04:06:05.200719+00:00 heroku[web.1]: State changed from starting to up
2015-06-19T04:06:05.498641+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "SecurityQuestions" CASCADE;
2015-06-19T04:06:05.532008+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Trophies" CASCADE;
2015-06-19T04:06:05.547975+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Users" CASCADE;
2015-06-19T04:06:05.577964+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Users" ("id"   SERIAL , "username" VARCHAR(255) UNIQUE, "password" VARCHAR(255), "score" INTEGER DEFAULT 0, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "following" INTEGER REFERENCES "Users" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));
2015-06-19T04:06:05.521090+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Quotes" CASCADE;
2015-06-19T04:06:05.540556+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Tokens" CASCADE;
2015-06-19T04:06:05.566231+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Users" CASCADE;
2015-06-19T04:06:05.760743+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T04:06:05.768122+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Tokens" ("id"   SERIAL , "token" VARCHAR(255) UNIQUE, "expires" TIMESTAMP WITH TIME ZONE, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "UserId" INTEGER REFERENCES "Users" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));
2015-06-19T04:06:05.763364+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Tokens" CASCADE;
2015-06-19T04:06:05.801806+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Tokens' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T04:06:05.808693+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Trophies" ("id"   SERIAL , "country" VARCHAR(255), "name" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
2015-06-19T04:06:05.833424+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Quotes" CASCADE;
2015-06-19T04:06:05.863063+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Quotes' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T04:06:05.870351+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "SecurityQuestions" ("id"   SERIAL , "username" VARCHAR(255), "questionOne" VARCHAR(255), "questionTwo" VARCHAR(255), "answerOne" VARCHAR(255), "answerTwo" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
2015-06-19T04:06:06.011853+00:00 app[web.1]: Executing (default): INSERT INTO "Users" ("id","username","password","score","updatedAt","createdAt") VALUES (DEFAULT,'admin','$2a$10$S/gbOy1Aran47/DFqkhP6OzJne2GCieY77.1rnFFqp.mz3T8zOKWe',0,'2015-06-19 04:06:06.007 +00:00','2015-06-19 04:06:06.007 +00:00') RETURNING *;
2015-06-19T04:06:05.805609+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Trophies" CASCADE;
2015-06-19T04:06:05.830737+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Trophies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T04:06:05.838498+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Quotes" ("id"   SERIAL , "question" VARCHAR(255), "trophy" VARCHAR(255), "choice1" VARCHAR(255), "choice2" VARCHAR(255), "choice3" VARCHAR(255), "choice4" VARCHAR(255), "answer" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
2015-06-19T04:06:05.866101+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "SecurityQuestions" CASCADE;
2015-06-19T04:06:05.894280+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'SecurityQuestions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T04:06:06.118374+00:00 app[web.1]: Executing (default): INSERT INTO "Users" ("id","username","password","score","updatedAt","createdAt") VALUES (DEFAULT,'demo','$2a$10$W15OGIJ90nbincZjJtVRgedGQuaJrpnADNcgXofUnqoo1EGwBT7YC',0,'2015-06-19 04:06:06.117 +00:00','2015-06-19 04:06:06.117 +00:00') RETURNING *;
2015-06-19T04:06:47.497935+00:00 app[web.1]: Executing (default): SELECT "id", "username", "password", "score", "createdAt", "updatedAt", "following" FROM "Users" AS "User" WHERE "User"."username" = 'dan' LIMIT 1;
2015-06-19T04:06:47.663107+00:00 app[web.1]: Executing (default): INSERT INTO "Users" ("id","username","password","score","updatedAt","createdAt") VALUES (DEFAULT,'dan','$2a$10$AOgrOIL6tJ6z3sBpEPiWmOsBMn395WtWu0L9NAdVcS8txEJdw.XRe',0,'2015-06-19 04:06:47.662 +00:00','2015-06-19 04:06:47.662 +00:00') RETURNING *;
2015-06-19T04:06:48.095171+00:00 heroku[router]: at=info method=POST path="/auth/register" host=powerful-cove-1691.herokuapp.com request_id=5777b567-96d3-41ee-bdc5-e137d7652957 fwd="125.239.160.28" dyno=web.1 connect=2ms service=678ms status=200 bytes=233
2015-06-19T04:06:48.077174+00:00 app[web.1]: Executing (default): INSERT INTO "SecurityQuestions" ("id","username","questionOne","questionTwo","answerOne","answerTwo","updatedAt","createdAt") VALUES (DEFAULT,'dan','What''s my middle name?','What''s my last name?','$2a$10$ajJyARF9yJoBZLqUXbsNTedYujs71P3/6u5T2HeHDwy/xKdsqr6VK','$2a$10$SC.5i7jbIMAGqJVBehBxMeqMJQSWKW4U/1FVkZrb/L/aOZV1hOq2.','2015-06-19 04:06:48.074 +00:00','2015-06-19 04:06:48.074 +00:00') RETURNING *;
2015-06-19T04:07:05.215402+00:00 heroku[router]: at=info method=POST path="/auth/securityQuestionAnswer" host=powerful-cove-1691.herokuapp.com request_id=7fa3bb98-811e-4eb8-b79d-d6ef9f66a254 fwd="125.239.160.28" dyno=web.1 connect=2ms service=14ms status=400 bytes=255
2015-06-19T04:08:31.248142+00:00 heroku[router]: at=info method=POST path="/auth/securityQuestionAnswer" host=powerful-cove-1691.herokuapp.com request_id=818dc576-4f50-4fd9-be1a-020ee66f79b9 fwd="125.239.160.28" dyno=web.1 connect=17ms service=6ms status=400 bytes=255
2015-06-19T04:09:07.848506+00:00 heroku[api]: Deploy 8bb1d90 by dannycole12@gmail.com
2015-06-19T04:09:07.848506+00:00 heroku[api]: Release v40 created by dannycole12@gmail.com
2015-06-19T04:09:07.903893+00:00 heroku[slug-compiler]: Slug compilation started
2015-06-19T04:09:07.903921+00:00 heroku[slug-compiler]: Slug compilation finished
2015-06-19T04:09:08.405666+00:00 heroku[web.1]: State changed from up to starting
2015-06-19T04:09:10.350321+00:00 heroku[web.1]: Starting process with command `node core.js`
2015-06-19T04:09:11.744544+00:00 heroku[web.1]: Stopping all processes with SIGTERM
2015-06-19T04:09:12.254875+00:00 app[web.1]: Detected 512 MB available memory, 512 MB limit per process (WEB_MEMORY)
2015-06-19T04:09:12.254904+00:00 app[web.1]: Recommending WEB_CONCURRENCY=1
2015-06-19T04:09:13.417826+00:00 heroku[web.1]: Process exited with status 143
2015-06-19T04:09:13.417283+00:00 app[web.1]: Fri, 19 Jun 2015 04:09:13 GMT body-parser deprecated undefined extended: provide extended option at core.js:19:20
2015-06-19T04:09:13.473025+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "SecurityQuestions" CASCADE;
2015-06-19T04:09:13.510039+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Trophies" CASCADE;
2015-06-19T04:09:13.525694+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Users" CASCADE;
2015-06-19T04:09:13.550936+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Users" ("id"   SERIAL , "username" VARCHAR(255) UNIQUE, "password" VARCHAR(255), "score" INTEGER DEFAULT 0, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "following" INTEGER REFERENCES "Users" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));
2015-06-19T04:09:13.598499+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Tokens" CASCADE;
2015-06-19T04:09:13.629768+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Tokens' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T04:09:13.639071+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Trophies" ("id"   SERIAL , "country" VARCHAR(255), "name" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
2015-06-19T04:09:13.434223+00:00 app[web.1]: Listening on port 45701
2015-06-19T04:09:13.495242+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Quotes" CASCADE;
2015-06-19T04:09:13.518121+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Tokens" CASCADE;
2015-06-19T04:09:13.537662+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Users" CASCADE;
2015-06-19T04:09:13.590574+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T04:09:13.603136+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Tokens" ("id"   SERIAL , "token" VARCHAR(255) UNIQUE, "expires" TIMESTAMP WITH TIME ZONE, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "UserId" INTEGER REFERENCES "Users" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));
2015-06-19T04:09:13.634262+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Trophies" CASCADE;
2015-06-19T04:09:13.670177+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Trophies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T04:09:13.680481+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Quotes" ("id"   SERIAL , "question" VARCHAR(255), "trophy" VARCHAR(255), "choice1" VARCHAR(255), "choice2" VARCHAR(255), "choice3" VARCHAR(255), "choice4" VARCHAR(255), "answer" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
2015-06-19T04:09:13.678010+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Quotes" CASCADE;
2015-06-19T04:09:13.703012+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Quotes' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T04:09:13.715037+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "SecurityQuestions" ("id"   SERIAL , "username" VARCHAR(255), "questionOne" VARCHAR(255), "questionTwo" VARCHAR(255), "answerOne" VARCHAR(255), "answerTwo" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
2015-06-19T04:09:13.709381+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "SecurityQuestions" CASCADE;
2015-06-19T04:09:13.737940+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'SecurityQuestions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T04:09:13.948135+00:00 app[web.1]: Executing (default): INSERT INTO "Users" ("id","username","password","score","updatedAt","createdAt") VALUES (DEFAULT,'admin','$2a$10$AxNTEbh0/eINhD/34aPCpeiLcEWfvowJM93n7W/GmMeBwZuT0DMWi',0,'2015-06-19 04:09:13.933 +00:00','2015-06-19 04:09:13.933 +00:00') RETURNING *;
2015-06-19T04:09:14.007666+00:00 heroku[web.1]: State changed from starting to up
2015-06-19T04:09:14.281992+00:00 app[web.1]: Executing (default): INSERT INTO "Users" ("id","username","password","score","updatedAt","createdAt") VALUES (DEFAULT,'demo','$2a$10$WDq1p4vRsb4X9MYrU.lr/OxcPcagk3ogHfTGT74XgSQFnXa1/MXI2',0,'2015-06-19 04:09:14.280 +00:00','2015-06-19 04:09:14.280 +00:00') RETURNING *;
2015-06-19T04:09:50.918715+00:00 app[web.1]: Executing (default): SELECT "id", "username", "password", "score", "createdAt", "updatedAt", "following" FROM "Users" AS "User" WHERE "User"."username" = 'dan' LIMIT 1;
2015-06-19T04:09:51.042177+00:00 app[web.1]: Executing (default): INSERT INTO "Users" ("id","username","password","score","updatedAt","createdAt") VALUES (DEFAULT,'dan','$2a$10$gcohSR/SCE6A8Z4IY63Xn.KxyEji5nI1EQV9OO4yWnFDBXvXi3P8C',0,'2015-06-19 04:09:51.041 +00:00','2015-06-19 04:09:51.041 +00:00') RETURNING *;
2015-06-19T04:09:51.249984+00:00 app[web.1]: Executing (default): INSERT INTO "SecurityQuestions" ("id","username","questionOne","questionTwo","answerOne","answerTwo","updatedAt","createdAt") VALUES (DEFAULT,'dan','What''s my middle name?','What''s my last name?','$2a$10$f/0W9bMMYbgXF0SFqXKP9esrXpZI6U0uwGxRka5qr5QEbQfYjbo3u','$2a$10$7TAtijxQkJGRvEVKMRUateAGkE/cibiIGD0mHC4kLvatpYGHV8vY6','2015-06-19 04:09:51.248 +00:00','2015-06-19 04:09:51.248 +00:00') RETURNING *;
2015-06-19T04:09:51.273455+00:00 heroku[router]: at=info method=POST path="/auth/register" host=powerful-cove-1691.herokuapp.com request_id=fc3560ad-65a3-4b46-998c-6d8adc8e72ac fwd="125.239.160.28" dyno=web.1 connect=2ms service=416ms status=200 bytes=233
2015-06-19T04:10:01.889899+00:00 app[web.1]: Executing (default): SELECT "id", "username", "questionOne", "questionTwo", "answerOne", "answerTwo", "createdAt", "updatedAt" FROM "SecurityQuestions" AS "SecurityQuestions" WHERE "SecurityQuestions"."username" = 'dan' LIMIT 1;
2015-06-19T04:10:02.250976+00:00 heroku[router]: at=info method=POST path="/auth/securityQuestionAnswer" host=powerful-cove-1691.herokuapp.com request_id=ed324fbe-daa3-48d7-8c31-6fb7ea436a13 fwd="125.239.160.28" dyno=web.1 connect=8ms service=377ms status=200 bytes=230
2015-06-19T04:11:21.336915+00:00 heroku[router]: at=info method=POST path="/auth/securityQuestionAnswer" host=powerful-cove-1691.herokuapp.com request_id=52d89813-beb1-4841-89bc-d3fc82861ba0 fwd="125.239.160.28" dyno=web.1 connect=1ms service=148ms status=200 bytes=230
2015-06-19T04:11:21.210408+00:00 app[web.1]: Executing (default): SELECT "id", "username", "questionOne", "questionTwo", "answerOne", "answerTwo", "createdAt", "updatedAt" FROM "SecurityQuestions" AS "SecurityQuestions" WHERE "SecurityQuestions"."username" = 'dan' LIMIT 1;
2015-06-19T04:11:59.044722+00:00 heroku[slug-compiler]: Slug compilation started
2015-06-19T04:11:59.044754+00:00 heroku[slug-compiler]: Slug compilation finished
2015-06-19T04:11:58.997295+00:00 heroku[api]: Deploy 75afd00 by dannycole12@gmail.com
2015-06-19T04:11:58.997295+00:00 heroku[api]: Release v41 created by dannycole12@gmail.com
2015-06-19T04:11:59.185962+00:00 heroku[web.1]: State changed from up to starting
2015-06-19T04:12:00.818327+00:00 heroku[web.1]: Starting process with command `node core.js`
2015-06-19T04:12:01.748410+00:00 heroku[web.1]: Stopping all processes with SIGTERM
2015-06-19T04:12:02.479252+00:00 app[web.1]: Detected 512 MB available memory, 512 MB limit per process (WEB_MEMORY)
2015-06-19T04:12:02.479285+00:00 app[web.1]: Recommending WEB_CONCURRENCY=1
2015-06-19T04:12:03.221996+00:00 heroku[web.1]: Process exited with status 143
2015-06-19T04:12:03.233029+00:00 heroku[web.1]: State changed from starting to up
2015-06-19T04:12:03.175592+00:00 app[web.1]: Fri, 19 Jun 2015 04:12:03 GMT body-parser deprecated undefined extended: provide extended option at core.js:19:20
2015-06-19T04:12:03.192313+00:00 app[web.1]: Listening on port 45735
2015-06-19T04:12:04.652348+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Quotes" CASCADE;
2015-06-19T04:12:04.671766+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Tokens" CASCADE;
2015-06-19T04:12:04.697134+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Users" CASCADE;
2015-06-19T04:12:04.621924+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "SecurityQuestions" CASCADE;
2015-06-19T04:12:04.662554+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Trophies" CASCADE;
2015-06-19T04:12:04.681012+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Users" CASCADE;
2015-06-19T04:12:04.704909+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Users" ("id"   SERIAL , "username" VARCHAR(255) UNIQUE, "password" VARCHAR(255), "score" INTEGER DEFAULT 0, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "following" INTEGER REFERENCES "Users" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));
2015-06-19T04:12:07.163471+00:00 app[web.1]: Executing (default): SELECT "id", "username", "password", "score", "createdAt", "updatedAt", "following" FROM "Users" AS "User" WHERE "User"."username" = 'dan' LIMIT 1;
2015-06-19T04:12:07.168768+00:00 app[web.1]: Unhandled rejection SequelizeDatabaseError: relation "Users" does not exist
2015-06-19T04:12:07.168773+00:00 app[web.1]:     at module.exports.Query.formatError (/app/node_modules/sequelize/lib/dialects/postgres/query.js:421:16)
2015-06-19T04:12:07.168774+00:00 app[web.1]:     at null.<anonymous> (/app/node_modules/sequelize/lib/dialects/postgres/query.js:105:21)
2015-06-19T04:12:07.168776+00:00 app[web.1]:     at emit (events.js:95:17)
2015-06-19T04:12:07.168777+00:00 app[web.1]:     at Query.handleError (/app/node_modules/pg/lib/query.js:99:8)
2015-06-19T04:12:07.168779+00:00 app[web.1]:     at null.<anonymous> (/app/node_modules/pg/lib/client.js:166:26)
2015-06-19T04:12:07.168780+00:00 app[web.1]:     at emit (events.js:95:17)
2015-06-19T04:12:07.168782+00:00 app[web.1]:     at Socket.<anonymous> (/app/node_modules/pg/lib/connection.js:109:12)
2015-06-19T04:12:07.168783+00:00 app[web.1]:     at Socket.emit (events.js:95:17)
2015-06-19T04:12:07.168785+00:00 app[web.1]:     at Socket.<anonymous> (_stream_readable.js:765:14)
2015-06-19T04:12:07.168786+00:00 app[web.1]:     at Socket.emit (events.js:92:17)
2015-06-19T04:12:07.168788+00:00 app[web.1]:     at emitReadable_ (_stream_readable.js:427:10)
2015-06-19T04:12:07.168789+00:00 app[web.1]:     at emitReadable (_stream_readable.js:423:5)
2015-06-19T04:12:07.168791+00:00 app[web.1]:     at readableAddChunk (_stream_readable.js:166:9)
2015-06-19T04:12:07.168792+00:00 app[web.1]:     at Socket.Readable.push (_stream_readable.js:128:10)
2015-06-19T04:12:07.168793+00:00 app[web.1]:     at TCP.onread (net.js:529:21)
2015-06-19T04:12:07.635579+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T04:12:07.653934+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Tokens" ("id"   SERIAL , "token" VARCHAR(255) UNIQUE, "expires" TIMESTAMP WITH TIME ZONE, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "UserId" INTEGER REFERENCES "Users" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));
2015-06-19T04:12:07.688510+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Trophies" CASCADE;
2015-06-19T04:12:07.725514+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Trophies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T04:12:07.734517+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Quotes" ("id"   SERIAL , "question" VARCHAR(255), "trophy" VARCHAR(255), "choice1" VARCHAR(255), "choice2" VARCHAR(255), "choice3" VARCHAR(255), "choice4" VARCHAR(255), "answer" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
2015-06-19T04:12:07.765252+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "SecurityQuestions" CASCADE;
2015-06-19T04:12:07.848874+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'SecurityQuestions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T04:12:07.646660+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Tokens" CASCADE;
2015-06-19T04:12:07.683092+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Tokens' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T04:12:07.694086+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Trophies" ("id"   SERIAL , "country" VARCHAR(255), "name" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
2015-06-19T04:12:07.729243+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Quotes" CASCADE;
2015-06-19T04:12:07.759668+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Quotes' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T04:12:07.770594+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "SecurityQuestions" ("id"   SERIAL , "username" VARCHAR(255), "questionOne" VARCHAR(255), "questionTwo" VARCHAR(255), "answerOne" VARCHAR(255), "answerTwo" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
2015-06-19T04:12:07.997645+00:00 app[web.1]: Executing (default): INSERT INTO "Users" ("id","username","password","score","updatedAt","createdAt") VALUES (DEFAULT,'admin','$2a$10$3QbfJJueYCg/tzHoEhIdtOx2aFJB779OQrCLJRCThpJtTtpaKOjWW',0,'2015-06-19 04:12:07.987 +00:00','2015-06-19 04:12:07.987 +00:00') RETURNING *;
2015-06-19T04:12:08.112295+00:00 app[web.1]: Executing (default): INSERT INTO "Users" ("id","username","password","score","updatedAt","createdAt") VALUES (DEFAULT,'demo','$2a$10$DC3oXED.b1.QvyMg/g3FYOupEf73AFlc0/tvD67y8JLfC6rmteneK',0,'2015-06-19 04:12:08.111 +00:00','2015-06-19 04:12:08.111 +00:00') RETURNING *;
2015-06-19T04:12:26.149516+00:00 app[web.1]: Executing (default): SELECT "id", "username", "password", "score", "createdAt", "updatedAt", "following" FROM "Users" AS "User" WHERE "User"."username" = 'dan' LIMIT 1;
2015-06-19T04:12:26.258422+00:00 app[web.1]: Executing (default): INSERT INTO "Users" ("id","username","password","score","updatedAt","createdAt") VALUES (DEFAULT,'dan','$2a$10$4pFjcbjw4ylHR.gTEYersu3XGJEkqfsiT1p2.aE4FfaR5.BITUOp.',0,'2015-06-19 04:12:26.257 +00:00','2015-06-19 04:12:26.257 +00:00') RETURNING *;
2015-06-19T04:12:26.463708+00:00 app[web.1]: Executing (default): INSERT INTO "SecurityQuestions" ("id","username","questionOne","questionTwo","answerOne","answerTwo","updatedAt","createdAt") VALUES (DEFAULT,'dan','What''s my middle name?','What''s my last name?','$2a$10$hKMXNb.8sUQS0vcDR.5azerYotKScGK8OimoA3/WSrUYQD6NgnZoe','$2a$10$yNtiPft/X.LXMxNqUQqM1u8Je52oEuefRhI94HKXG3rAvWUf5MF2G','2015-06-19 04:12:26.462 +00:00','2015-06-19 04:12:26.462 +00:00') RETURNING *;
2015-06-19T04:12:26.477336+00:00 heroku[router]: at=info method=POST path="/auth/register" host=powerful-cove-1691.herokuapp.com request_id=dea9d6d6-95da-4b90-92c7-696e1b26f4b0 fwd="125.239.160.28" dyno=web.1 connect=0ms service=336ms status=200 bytes=233
2015-06-19T04:12:33.555168+00:00 app[web.1]: Executing (default): SELECT "id", "username", "questionOne", "questionTwo", "answerOne", "answerTwo", "createdAt", "updatedAt" FROM "SecurityQuestions" AS "SecurityQuestions" WHERE "SecurityQuestions"."username" = 'dan' LIMIT 1;
2015-06-19T04:12:34.484247+00:00 heroku[router]: at=info method=POST path="/auth/securityQuestionAnswer" host=powerful-cove-1691.herokuapp.com request_id=8c48f316-4a03-4b2d-9538-62d05fe1ba9e fwd="125.239.160.28" dyno=web.1 connect=0ms service=934ms status=200 bytes=230
2015-06-19T04:12:34.382071+00:00 app[web.1]: $2a$10$hKMXNb.8sUQS0vcDR.5azerYotKScGK8OimoA3/WSrUYQD6NgnZoe
2015-06-19T04:12:34.382083+00:00 app[web.1]: $2a$10$yNtiPft/X.LXMxNqUQqM1u8Je52oEuefRhI94HKXG3rAvWUf5MF2G
2015-06-19T04:12:37.092232+00:00 heroku[router]: at=error code=H12 desc="Request timeout" method=POST path="/auth/register" host=powerful-cove-1691.herokuapp.com request_id=8c6afbbb-bcb1-4fc6-952a-eacc18f52725 fwd="125.239.160.28" dyno=web.1 connect=1ms service=30000ms status=503 bytes=0
2015-06-19T04:12:52.461728+00:00 app[web.1]: Executing (default): SELECT "id", "username", "questionOne", "questionTwo", "answerOne", "answerTwo", "createdAt", "updatedAt" FROM "SecurityQuestions" AS "SecurityQuestions" WHERE "SecurityQuestions"."username" = 'dan' LIMIT 1;
2015-06-19T04:12:52.464972+00:00 app[web.1]: $2a$10$hKMXNb.8sUQS0vcDR.5azerYotKScGK8OimoA3/WSrUYQD6NgnZoe
2015-06-19T04:12:52.464979+00:00 app[web.1]: $2a$10$yNtiPft/X.LXMxNqUQqM1u8Je52oEuefRhI94HKXG3rAvWUf5MF2G
2015-06-19T04:12:52.564545+00:00 heroku[router]: at=info method=POST path="/auth/securityQuestionAnswer" host=powerful-cove-1691.herokuapp.com request_id=03f0ec4a-d287-4f49-96db-88189218d1ae fwd="125.239.160.28" dyno=web.1 connect=1ms service=120ms status=200 bytes=230
2015-06-19T04:13:28.092540+00:00 app[web.1]: Executing (default): SELECT "id", "username", "questionOne", "questionTwo", "answerOne", "answerTwo", "createdAt", "updatedAt" FROM "SecurityQuestions" AS "SecurityQuestions" WHERE "SecurityQuestions"."username" = 'dan' LIMIT 1;
2015-06-19T04:13:28.095895+00:00 app[web.1]: $2a$10$hKMXNb.8sUQS0vcDR.5azerYotKScGK8OimoA3/WSrUYQD6NgnZoe
2015-06-19T04:13:28.095901+00:00 app[web.1]: $2a$10$yNtiPft/X.LXMxNqUQqM1u8Je52oEuefRhI94HKXG3rAvWUf5MF2G
2015-06-19T04:13:28.194344+00:00 heroku[router]: at=info method=POST path="/auth/securityQuestionAnswer" host=powerful-cove-1691.herokuapp.com request_id=2d093822-67a8-4275-ad5a-d3616b282342 fwd="125.239.160.28" dyno=web.1 connect=2ms service=116ms status=200 bytes=230
2015-06-19T04:13:47.660368+00:00 heroku[slug-compiler]: Slug compilation started
2015-06-19T04:13:47.660396+00:00 heroku[slug-compiler]: Slug compilation finished
2015-06-19T04:13:47.612008+00:00 heroku[api]: Deploy fd0c43e by dannycole12@gmail.com
2015-06-19T04:13:47.612008+00:00 heroku[api]: Release v42 created by dannycole12@gmail.com
2015-06-19T04:13:47.920387+00:00 heroku[web.1]: State changed from up to starting
2015-06-19T04:13:49.881317+00:00 heroku[web.1]: Starting process with command `node core.js`
2015-06-19T04:13:50.684408+00:00 heroku[web.1]: Stopping all processes with SIGTERM
2015-06-19T04:13:51.863706+00:00 app[web.1]: Detected 512 MB available memory, 512 MB limit per process (WEB_MEMORY)
2015-06-19T04:13:51.863727+00:00 app[web.1]: Recommending WEB_CONCURRENCY=1
2015-06-19T04:13:52.260471+00:00 heroku[web.1]: Process exited with status 143
2015-06-19T04:13:52.540828+00:00 app[web.1]: Fri, 19 Jun 2015 04:13:52 GMT body-parser deprecated undefined extended: provide extended option at core.js:19:20
2015-06-19T04:13:52.613665+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "SecurityQuestions" CASCADE;
2015-06-19T04:13:52.648397+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Trophies" CASCADE;
2015-06-19T04:13:52.687006+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Users" CASCADE;
2015-06-19T04:13:52.727387+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Users" ("id"   SERIAL , "username" VARCHAR(255) UNIQUE, "password" VARCHAR(255), "score" INTEGER DEFAULT 0, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "following" INTEGER REFERENCES "Users" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));
2015-06-19T04:13:52.785180+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Tokens" CASCADE;
2015-06-19T04:13:52.558410+00:00 app[web.1]: Listening on port 46678
2015-06-19T04:13:52.638596+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Quotes" CASCADE;
2015-06-19T04:13:52.670013+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Tokens" CASCADE;
2015-06-19T04:13:52.719502+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Users" CASCADE;
2015-06-19T04:13:52.776274+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T04:13:52.805486+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Tokens" ("id"   SERIAL , "token" VARCHAR(255) UNIQUE, "expires" TIMESTAMP WITH TIME ZONE, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "UserId" INTEGER REFERENCES "Users" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));
2015-06-19T04:13:52.855594+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Trophies" CASCADE;
2015-06-19T04:13:52.887718+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Trophies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T04:13:52.906952+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Quotes" ("id"   SERIAL , "question" VARCHAR(255), "trophy" VARCHAR(255), "choice1" VARCHAR(255), "choice2" VARCHAR(255), "choice3" VARCHAR(255), "choice4" VARCHAR(255), "answer" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
2015-06-19T04:13:52.959406+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "SecurityQuestions" CASCADE;
2015-06-19T04:13:52.984348+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'SecurityQuestions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T04:13:52.842076+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Tokens' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T04:13:52.859090+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Trophies" ("id"   SERIAL , "country" VARCHAR(255), "name" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
2015-06-19T04:13:52.901874+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Quotes" CASCADE;
2015-06-19T04:13:52.941122+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Quotes' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T04:13:52.963899+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "SecurityQuestions" ("id"   SERIAL , "username" VARCHAR(255), "questionOne" VARCHAR(255), "questionTwo" VARCHAR(255), "answerOne" VARCHAR(255), "answerTwo" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
2015-06-19T04:13:53.111468+00:00 app[web.1]: Executing (default): INSERT INTO "Users" ("id","username","password","score","updatedAt","createdAt") VALUES (DEFAULT,'admin','$2a$10$TbCunaz6eYYI9AsFP0IxHujOsiYzPKzDQ.YxL.REyyOzWmDbnPo/S',0,'2015-06-19 04:13:53.106 +00:00','2015-06-19 04:13:53.106 +00:00') RETURNING *;
2015-06-19T04:13:53.255510+00:00 app[web.1]: Executing (default): INSERT INTO "Users" ("id","username","password","score","updatedAt","createdAt") VALUES (DEFAULT,'demo','$2a$10$gvd0psYxZffDXbz/YXe0pe48tw5qXg.8vuLDniE3/nAe22NYG9Pbm',0,'2015-06-19 04:13:53.254 +00:00','2015-06-19 04:13:53.254 +00:00') RETURNING *;
2015-06-19T04:13:53.557382+00:00 heroku[web.1]: State changed from starting to up
2015-06-19T04:14:01.619774+00:00 app[web.1]: Executing (default): SELECT "id", "username", "password", "score", "createdAt", "updatedAt", "following" FROM "Users" AS "User" WHERE "User"."username" = 'dan' LIMIT 1;
2015-06-19T04:14:01.727156+00:00 app[web.1]: Executing (default): INSERT INTO "Users" ("id","username","password","score","updatedAt","createdAt") VALUES (DEFAULT,'dan','$2a$10$pL/fWDb0BtZ1mLvfmtFiZ.EDrBqa2HH2gWCeTOpmsyw1Oo2VxPz8W',0,'2015-06-19 04:14:01.726 +00:00','2015-06-19 04:14:01.726 +00:00') RETURNING *;
2015-06-19T04:14:01.932160+00:00 app[web.1]: Executing (default): INSERT INTO "SecurityQuestions" ("id","username","questionOne","questionTwo","answerOne","answerTwo","updatedAt","createdAt") VALUES (DEFAULT,'dan','What''s my middle name?','What''s my last name?','$2a$10$rksoU1stfT/9e8e2ISXgZ.Npi39izynLFZWZqoeLTdHPbwDcJJyVi','$2a$10$1eWO6Ca0g6.RfJSwJ8yMw.EnuRNwVcqEe8LeLT0jEeSZpZK3xdHbW','2015-06-19 04:14:01.930 +00:00','2015-06-19 04:14:01.930 +00:00') RETURNING *;
2015-06-19T04:14:01.946350+00:00 heroku[router]: at=info method=POST path="/auth/register" host=powerful-cove-1691.herokuapp.com request_id=3146bee9-2151-4ed6-934d-36a9b588a630 fwd="125.239.160.28" dyno=web.1 connect=4ms service=348ms status=200 bytes=233
2015-06-19T04:14:20.721696+00:00 heroku[router]: at=info method=POST path="/auth/securityQuestionAnswer" host=powerful-cove-1691.herokuapp.com request_id=d0e6e6d9-4d58-43fa-b459-449745928ead fwd="125.239.160.28" dyno=web.1 connect=2ms service=188ms status=200 bytes=230
2015-06-19T04:14:20.592875+00:00 app[web.1]: Executing (default): SELECT "id", "username", "questionOne", "questionTwo", "answerOne", "answerTwo", "createdAt", "updatedAt" FROM "SecurityQuestions" AS "SecurityQuestions" WHERE "SecurityQuestions"."username" = 'dan' LIMIT 1;
2015-06-19T04:14:20.597163+00:00 app[web.1]: $2a$10$rksoU1stfT/9e8e2ISXgZ.Npi39izynLFZWZqoeLTdHPbwDcJJyVi
2015-06-19T04:14:20.597173+00:00 app[web.1]: $2a$10$1eWO6Ca0g6.RfJSwJ8yMw.EnuRNwVcqEe8LeLT0jEeSZpZK3xdHbW
2015-06-19T04:14:20.597203+00:00 app[web.1]: james
2015-06-19T04:14:20.597231+00:00 app[web.1]: cole
2015-06-19T04:15:39.307223+00:00 heroku[slug-compiler]: Slug compilation started
2015-06-19T04:15:39.307245+00:00 heroku[slug-compiler]: Slug compilation finished
2015-06-19T04:15:39.236041+00:00 heroku[api]: Deploy c5aff7f by dannycole12@gmail.com
2015-06-19T04:15:39.236041+00:00 heroku[api]: Release v43 created by dannycole12@gmail.com
2015-06-19T04:15:39.589590+00:00 heroku[web.1]: State changed from up to starting
2015-06-19T04:15:42.164348+00:00 heroku[web.1]: Stopping all processes with SIGTERM
2015-06-19T04:15:43.306555+00:00 heroku[web.1]: Starting process with command `node core.js`
2015-06-19T04:15:43.699964+00:00 heroku[web.1]: Process exited with status 143
2015-06-19T04:15:45.401109+00:00 app[web.1]: Detected 512 MB available memory, 512 MB limit per process (WEB_MEMORY)
2015-06-19T04:15:45.401181+00:00 app[web.1]: Recommending WEB_CONCURRENCY=1
2015-06-19T04:15:46.487026+00:00 app[web.1]: Fri, 19 Jun 2015 04:15:46 GMT body-parser deprecated undefined extended: provide extended option at core.js:19:20
2015-06-19T04:15:46.542031+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "SecurityQuestions" CASCADE;
2015-06-19T04:15:46.563425+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Trophies" CASCADE;
2015-06-19T04:15:46.576988+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Users" CASCADE;
2015-06-19T04:15:46.600368+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Users" ("id"   SERIAL , "username" VARCHAR(255) UNIQUE, "password" VARCHAR(255), "score" INTEGER DEFAULT 0, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "following" INTEGER REFERENCES "Users" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));
2015-06-19T04:15:46.651363+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Tokens" CASCADE;
2015-06-19T04:15:46.675311+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Tokens' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T04:15:46.681544+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Trophies" ("id"   SERIAL , "country" VARCHAR(255), "name" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
2015-06-19T04:15:46.704306+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Quotes" CASCADE;
2015-06-19T04:15:46.729267+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Quotes' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T04:15:46.513537+00:00 app[web.1]: Listening on port 18164
2015-06-19T04:15:46.556457+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Quotes" CASCADE;
2015-06-19T04:15:46.570068+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Tokens" CASCADE;
2015-06-19T04:15:46.590336+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Users" CASCADE;
2015-06-19T04:15:46.644022+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T04:15:46.654991+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Tokens" ("id"   SERIAL , "token" VARCHAR(255) UNIQUE, "expires" TIMESTAMP WITH TIME ZONE, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "UserId" INTEGER REFERENCES "Users" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));
2015-06-19T04:15:46.678608+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Trophies" CASCADE;
2015-06-19T04:15:46.701638+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Trophies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T04:15:46.709461+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Quotes" ("id"   SERIAL , "question" VARCHAR(255), "trophy" VARCHAR(255), "choice1" VARCHAR(255), "choice2" VARCHAR(255), "choice3" VARCHAR(255), "choice4" VARCHAR(255), "answer" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
2015-06-19T04:15:46.732583+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "SecurityQuestions" CASCADE;
2015-06-19T04:15:46.737729+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "SecurityQuestions" ("id"   SERIAL , "username" VARCHAR(255), "questionOne" VARCHAR(255), "questionTwo" VARCHAR(255), "answerOne" VARCHAR(255), "answerTwo" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
2015-06-19T04:15:46.767501+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'SecurityQuestions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T04:15:47.010182+00:00 app[web.1]: Executing (default): INSERT INTO "Users" ("id","username","password","score","updatedAt","createdAt") VALUES (DEFAULT,'demo','$2a$10$f6NkDvWX3veTNxWR1t0WYeDCqVKWE9QvlyWZBdjvCw//ZVwDFs2Q6',0,'2015-06-19 04:15:47.009 +00:00','2015-06-19 04:15:47.009 +00:00') RETURNING *;
2015-06-19T04:15:46.891639+00:00 app[web.1]: Executing (default): INSERT INTO "Users" ("id","username","password","score","updatedAt","createdAt") VALUES (DEFAULT,'admin','$2a$10$s1F0AfXH.bQXUjs/VtFT8uAhQxu8TQGTvjmUsFNBqgOErwW62Ejo6',0,'2015-06-19 04:15:46.885 +00:00','2015-06-19 04:15:46.885 +00:00') RETURNING *;
2015-06-19T04:15:47.099994+00:00 heroku[web.1]: State changed from starting to up
2015-06-19T04:15:48.382240+00:00 app[web.1]: Executing (default): SELECT "id", "username", "password", "score", "createdAt", "updatedAt", "following" FROM "Users" AS "User" WHERE "User"."username" = 'dan' LIMIT 1;
2015-06-19T04:15:48.493335+00:00 app[web.1]: Executing (default): INSERT INTO "Users" ("id","username","password","score","updatedAt","createdAt") VALUES (DEFAULT,'dan','$2a$10$J45snf2f0.0EW18l4BGxluti8whfBMsWrtHGAxub/xYobh.maUPJm',0,'2015-06-19 04:15:48.492 +00:00','2015-06-19 04:15:48.492 +00:00') RETURNING *;
2015-06-19T04:15:48.729886+00:00 app[web.1]: Executing (default): INSERT INTO "SecurityQuestions" ("id","username","questionOne","questionTwo","answerOne","answerTwo","updatedAt","createdAt") VALUES (DEFAULT,'dan','What''s my middle name?','What''s my last name?','$2a$10$siKk8/roS1/sU91TiD31UOo.TK2KXMcp58KN8qUV7.pYhRTMmsL0C','$2a$10$gaha0a7FOt9D92vGCZdpmul9de60RRkKHy1wfR/elXeW7vYbaM6CK','2015-06-19 04:15:48.728 +00:00','2015-06-19 04:15:48.728 +00:00') RETURNING *;
2015-06-19T04:15:48.742782+00:00 heroku[router]: at=info method=POST path="/auth/register" host=powerful-cove-1691.herokuapp.com request_id=7c29984c-469f-46f8-9b02-226d7e4d989d fwd="125.239.160.28" dyno=web.1 connect=1ms service=383ms status=200 bytes=233
2015-06-19T04:15:55.174280+00:00 heroku[router]: at=info method=POST path="/auth/securityQuestionAnswer" host=powerful-cove-1691.herokuapp.com request_id=ab350188-a24f-4c00-8df1-a4ecf280e313 fwd="125.239.160.28" dyno=web.1 connect=2ms service=209ms status=200 bytes=230
2015-06-19T04:15:54.966687+00:00 app[web.1]: Executing (default): SELECT "id", "username", "questionOne", "questionTwo", "answerOne", "answerTwo", "createdAt", "updatedAt" FROM "SecurityQuestions" AS "SecurityQuestions" WHERE "SecurityQuestions"."username" = 'dan' LIMIT 1;
2015-06-19T04:15:54.968728+00:00 app[web.1]: $2a$10$siKk8/roS1/sU91TiD31UOo.TK2KXMcp58KN8qUV7.pYhRTMmsL0C
2015-06-19T04:15:54.968753+00:00 app[web.1]: $2a$10$gaha0a7FOt9D92vGCZdpmul9de60RRkKHy1wfR/elXeW7vYbaM6CK
2015-06-19T04:15:54.968783+00:00 app[web.1]: james
2015-06-19T04:15:54.968810+00:00 app[web.1]: cole
2015-06-19T04:16:22.885096+00:00 app[web.1]: Executing (default): SELECT "id", "username", "questionOne", "questionTwo", "answerOne", "answerTwo", "createdAt", "updatedAt" FROM "SecurityQuestions" AS "SecurityQuestions" WHERE "SecurityQuestions"."username" = 'dan' LIMIT 1;
2015-06-19T04:16:22.885958+00:00 app[web.1]: $2a$10$siKk8/roS1/sU91TiD31UOo.TK2KXMcp58KN8qUV7.pYhRTMmsL0C
2015-06-19T04:16:22.886006+00:00 app[web.1]: $2a$10$gaha0a7FOt9D92vGCZdpmul9de60RRkKHy1wfR/elXeW7vYbaM6CK
2015-06-19T04:16:22.886047+00:00 app[web.1]: 'james'
2015-06-19T04:16:22.886099+00:00 app[web.1]: 'cole'
2015-06-19T04:16:23.162103+00:00 heroku[router]: at=info method=POST path="/auth/securityQuestionAnswer" host=powerful-cove-1691.herokuapp.com request_id=40b2c22d-4bb3-4a7b-a8cc-f77b82b28f4b fwd="125.239.160.28" dyno=web.1 connect=2ms service=322ms status=200 bytes=230
2015-06-19T04:17:52.770177+00:00 heroku[api]: Deploy 6a41ab6 by dannycole12@gmail.com
2015-06-19T04:17:52.770238+00:00 heroku[api]: Release v44 created by dannycole12@gmail.com
2015-06-19T04:17:52.817381+00:00 heroku[slug-compiler]: Slug compilation started
2015-06-19T04:17:52.817401+00:00 heroku[slug-compiler]: Slug compilation finished
2015-06-19T04:17:52.927374+00:00 heroku[web.1]: State changed from up to starting
2015-06-19T04:17:55.646002+00:00 heroku[web.1]: Starting process with command `node core.js`
2015-06-19T04:17:55.787626+00:00 heroku[web.1]: Stopping all processes with SIGTERM
2015-06-19T04:17:57.476164+00:00 heroku[web.1]: Process exited with status 143
2015-06-19T04:17:57.438510+00:00 app[web.1]: Detected 512 MB available memory, 512 MB limit per process (WEB_MEMORY)
2015-06-19T04:17:57.438531+00:00 app[web.1]: Recommending WEB_CONCURRENCY=1
2015-06-19T04:17:58.051662+00:00 app[web.1]: Fri, 19 Jun 2015 04:17:58 GMT body-parser deprecated undefined extended: provide extended option at core.js:19:20
2015-06-19T04:17:58.108461+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "SecurityQuestions" CASCADE;
2015-06-19T04:17:58.133775+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Trophies" CASCADE;
2015-06-19T04:17:58.149172+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Users" CASCADE;
2015-06-19T04:17:58.164844+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Users" ("id"   SERIAL , "username" VARCHAR(255) UNIQUE, "password" VARCHAR(255), "score" INTEGER DEFAULT 0, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "following" INTEGER REFERENCES "Users" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));
2015-06-19T04:17:58.213776+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Tokens" CASCADE;
2015-06-19T04:17:58.255406+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Tokens' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T04:17:58.261393+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Trophies" ("id"   SERIAL , "country" VARCHAR(255), "name" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
2015-06-19T04:17:58.288932+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Quotes" CASCADE;
2015-06-19T04:17:58.067864+00:00 app[web.1]: Listening on port 24019
2015-06-19T04:17:58.124989+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Quotes" CASCADE;
2015-06-19T04:17:58.142802+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Tokens" CASCADE;
2015-06-19T04:17:58.158223+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Users" CASCADE;
2015-06-19T04:17:58.204712+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T04:17:58.217147+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Tokens" ("id"   SERIAL , "token" VARCHAR(255) UNIQUE, "expires" TIMESTAMP WITH TIME ZONE, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "UserId" INTEGER REFERENCES "Users" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));
2015-06-19T04:17:58.258471+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "Trophies" CASCADE;
2015-06-19T04:17:58.285507+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Trophies' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T04:17:58.313908+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "Quotes" ("id"   SERIAL , "question" VARCHAR(255), "trophy" VARCHAR(255), "choice1" VARCHAR(255), "choice2" VARCHAR(255), "choice3" VARCHAR(255), "choice4" VARCHAR(255), "answer" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
2015-06-19T04:17:58.344526+00:00 app[web.1]: Executing (default): DROP TABLE IF EXISTS "SecurityQuestions" CASCADE;
2015-06-19T04:17:58.397558+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'SecurityQuestions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T04:17:58.338598+00:00 app[web.1]: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND a.attnum = ANY(ix.indkey) AND t.relkind = 'r' and t.relname = 'Quotes' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2015-06-19T04:17:58.372663+00:00 app[web.1]: Executing (default): CREATE TABLE IF NOT EXISTS "SecurityQuestions" ("id"   SERIAL , "username" VARCHAR(255), "questionOne" VARCHAR(255), "questionTwo" VARCHAR(255), "answerOne" VARCHAR(255), "answerTwo" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
2015-06-19T04:17:58.639549+00:00 app[web.1]: Executing (default): INSERT INTO "Users" ("id","username","password","score","updatedAt","createdAt") VALUES (DEFAULT,'admin','$2a$10$l4kL/jCIvJWLAmlcbvr72.on5YZ8kL/A4hyJRzjlHCzx.QSMQ8dKC',0,'2015-06-19 04:17:58.634 +00:00','2015-06-19 04:17:58.634 +00:00') RETURNING *;
2015-06-19T04:17:58.759016+00:00 app[web.1]: Executing (default): INSERT INTO "Users" ("id","username","password","score","updatedAt","createdAt") VALUES (DEFAULT,'demo','$2a$10$bSg/Fy0LlvbcquUzmCrlZeOvBbH0wg5DqZ25I4tD9meNFr7skTvIa',0,'2015-06-19 04:17:58.757 +00:00','2015-06-19 04:17:58.757 +00:00') RETURNING *;
2015-06-19T04:17:59.364619+00:00 heroku[web.1]: State changed from starting to up
2015-06-19T04:18:00.986449+00:00 app[web.1]: Executing (default): SELECT "id", "username", "password", "score", "createdAt", "updatedAt", "following" FROM "Users" AS "User" WHERE "User"."username" = 'dan' LIMIT 1;
2015-06-19T04:18:01.096053+00:00 app[web.1]: Executing (default): INSERT INTO "Users" ("id","username","password","score","updatedAt","createdAt") VALUES (DEFAULT,'dan','$2a$10$PTEYKGgYXT3t.xqT1ZGIReVI4x4Vh4.ffoFV36g82djKslnsAx5Fy',0,'2015-06-19 04:18:01.095 +00:00','2015-06-19 04:18:01.095 +00:00') RETURNING *;
2015-06-19T04:18:01.324287+00:00 app[web.1]: Executing (default): INSERT INTO "SecurityQuestions" ("id","username","questionOne","questionTwo","answerOne","answerTwo","updatedAt","createdAt") VALUES (DEFAULT,'dan','What''s my middle name?','What''s my last name?','$2a$10$Sf.E/AzuxDJWRIwSRoTV/eJ9XKeeUu4jxmuW7/P4cKp8RKpnbH6t6','$2a$10$qOuIOZQZEWv/gieoLIJ.ZeFX5KJ886QYrngQ0yqfHvhzw9buchtW2','2015-06-19 04:18:01.322 +00:00','2015-06-19 04:18:01.322 +00:00') RETURNING *;
2015-06-19T04:18:01.341160+00:00 heroku[router]: at=info method=POST path="/auth/register" host=powerful-cove-1691.herokuapp.com request_id=25f66fb9-4bc5-4449-b72e-33f90c3522d6 fwd="125.239.160.28" dyno=web.1 connect=10ms service=406ms status=200 bytes=233
2015-06-19T04:18:14.868885+00:00 app[web.1]: Executing (default): SELECT "id", "username", "questionOne", "questionTwo", "answerOne", "answerTwo", "createdAt", "updatedAt" FROM "SecurityQuestions" AS "SecurityQuestions" WHERE "SecurityQuestions"."username" = 'dan' LIMIT 1;
2015-06-19T04:18:14.871870+00:00 app[web.1]: $2a$10$Sf.E/AzuxDJWRIwSRoTV/eJ9XKeeUu4jxmuW7/P4cKp8RKpnbH6t6
2015-06-19T04:18:14.871920+00:00 app[web.1]: $2a$10$qOuIOZQZEWv/gieoLIJ.ZeFX5KJ886QYrngQ0yqfHvhzw9buchtW2
2015-06-19T04:18:14.871940+00:00 app[web.1]: james
2015-06-19T04:18:14.871963+00:00 app[web.1]: cole
2015-06-19T04:18:15.094097+00:00 app[web.1]: Unhandled rejection ReferenceError: user is not defined
2015-06-19T04:18:15.094101+00:00 app[web.1]:     at null.<anonymous> (/app/auth.js:150:17)
2015-06-19T04:18:15.094103+00:00 app[web.1]:     at tryCatcher (/app/node_modules/sequelize/node_modules/bluebird/js/main/util.js:24:31)
2015-06-19T04:18:15.094104+00:00 app[web.1]:     at Promise._settlePromiseFromHandler (/app/node_modules/sequelize/node_modules/bluebird/js/main/promise.js:454:31)
2015-06-19T04:18:15.095667+00:00 app[web.1]:     at Promise._settlePromiseAt (/app/node_modules/sequelize/node_modules/bluebird/js/main/promise.js:530:18)
2015-06-19T04:18:15.095672+00:00 app[web.1]:     at Async._drainQueue (/app/node_modules/sequelize/node_modules/bluebird/js/main/async.js:187:12)
2015-06-19T04:18:15.095673+00:00 app[web.1]:     at Async._drainQueues (/app/node_modules/sequelize/node_modules/bluebird/js/main/async.js:192:10)
2015-06-19T04:18:15.095674+00:00 app[web.1]:     at Async.drainQueues (/app/node_modules/sequelize/node_modules/bluebird/js/main/async.js:15:14)
2015-06-19T04:18:15.095679+00:00 app[web.1]:     at process._tickCallback (node.js:448:13)
2015-06-19T04:18:44.840049+00:00 heroku[router]: at=error code=H12 desc="Request timeout" method=POST path="/auth/securityQuestionAnswer" host=powerful-cove-1691.herokuapp.com request_id=84ccd02a-fa7f-478f-888a-492ec9304b2d fwd="125.239.160.28" dyno=web.1 connect=1ms service=30000ms status=503 bytes=0
